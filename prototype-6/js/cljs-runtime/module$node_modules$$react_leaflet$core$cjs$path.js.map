{
"version":3,
"file":"module$node_modules$$react_leaflet$core$cjs$path.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiB7GC,QAASA,eAAc,CAACC,OAAD,CAAUC,KAAV,CAAiB,CACtC,IAAMC,WAAa,CAAC,CAAA,CAAGC,MAAOC,CAAAA,MAAX,GACnB,EAAC,CAAA,CAAGD,MAAOE,CAAAA,SAAX,EAAsBC,QAA0B,EAAG,CACjD,GAAIL,KAAMM,CAAAA,WAAV,GAA0BL,UAAWM,CAAAA,OAArC,CAA8C,CAC5C,IAAIC,kBAAJ,CAEMC,QAAsD,IAA5C,GAACD,kBAAD,CAAsBR,KAAMM,CAAAA,WAA5B,EAAmDE,kBAAnD,CAAwE,EACxFT,QAAQW,CAAAA,QAASC,CAAAA,QAAjB,CAA0BF,OAA1B,CACAR,WAAWM,CAAAA,OAAX,CAAqBE,OALuB,CADG,CAAnD,CAQG,CAACV,OAAD,CAAUC,KAAV,CARH,CAFsC,CAdxCH,OAAQe,CAAAA,UAAR,CAAqB,CAAA,CACrBf,QAAQC,CAAAA,cAAR,CAAyBA,cACzBD,QAAQgB,CAAAA,cAAR;AAyBAA,QAAuB,CAACC,UAAD,CAAa,CAClC,MAAOC,SAAgB,CAACf,KAAD,CAAQ,CAC7B,IAAMgB,QAAU,CAAC,CAAA,CAAGC,QAASC,CAAAA,iBAAb,GAAhB,CACMC,WAAaL,UAAA,CAAW,CAAC,CAAA,CAAGM,KAAMC,CAAAA,QAAV,EAAoBrB,KAApB,CAA2BgB,OAA3B,CAAX,CAAgDA,OAAhD,CACnB,EAAC,CAAA,CAAGM,OAAQC,CAAAA,gBAAZ,EAA8BJ,UAAWZ,CAAAA,OAAzC,CAAkDP,KAAMwB,CAAAA,aAAxD,CACA,EAAC,CAAA,CAAGC,MAAOC,CAAAA,iBAAX,EAA8BP,UAAWZ,CAAAA,OAAzC,CAAkDS,OAAlD,CACAlB,eAAA,CAAeqB,UAAWZ,CAAAA,OAA1B,CAAmCP,KAAnC,CACA,OAAOmB,WANsB,CADG,CAvBpC,KAAIjB,OAASP,OAAA,CAAQ,iCAAR,CAAb,CAEIsB,SAAWtB,OAAA,CAAQ,qDAAR,CAFf,CAII2B,QAAU3B,OAAA,CAAQ,oDAAR,CAJd;AAMI8B,OAAS9B,OAAA,CAAQ,mDAAR,CANb,CAQIyB,MAAQzB,OAAA,CAAQ,kDAAR,CAfiG;",
"sources":["node_modules/@react-leaflet/core/cjs/path.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$react_leaflet$core$cjs$path\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.usePathOptions = usePathOptions;\nexports.createPathHook = createPathHook;\n\nvar _react = require(\"react\");\n\nvar _context = require(\"./context\");\n\nvar _events = require(\"./events\");\n\nvar _layer = require(\"./layer\");\n\nvar _pane = require(\"./pane\");\n\nfunction usePathOptions(element, props) {\n  const optionsRef = (0, _react.useRef)();\n  (0, _react.useEffect)(function updatePathOptions() {\n    if (props.pathOptions !== optionsRef.current) {\n      var _props$pathOptions;\n\n      const options = (_props$pathOptions = props.pathOptions) != null ? _props$pathOptions : {};\n      element.instance.setStyle(options);\n      optionsRef.current = options;\n    }\n  }, [element, props]);\n}\n\nfunction createPathHook(useElement) {\n  return function usePath(props) {\n    const context = (0, _context.useLeafletContext)();\n    const elementRef = useElement((0, _pane.withPane)(props, context), context);\n    (0, _events.useEventHandlers)(elementRef.current, props.eventHandlers);\n    (0, _layer.useLayerLifecycle)(elementRef.current, context);\n    usePathOptions(elementRef.current, props);\n    return elementRef;\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","usePathOptions","element","props","optionsRef","_react","useRef","useEffect","updatePathOptions","pathOptions","current","_props$pathOptions","options","instance","setStyle","__esModule","createPathHook","useElement","usePath","context","_context","useLeafletContext","elementRef","_pane","withPane","_events","useEventHandlers","eventHandlers","_layer","useLayerLifecycle"]
}
