{"version":3,"sources":["dcs/prototype_6/util.cljs"],"mappings":";AAGA;;;AAAA,AAAMA;AAAN,AAGM,AAAMC;;AAEZ,AAAA,AAAMC,AACCC;AADP,AAEc,AAAA,AAAG,AAAG,AAACH,AAAKG;;AAE1B,AAAA,AAAMC,AACCC,AAAKC;AADZ,AAEM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAMC;AAAN,AAIK,AAAA,AAAK,AAACA,AAAAA,AAAAA,AAAMD,AAAAA,AAAaD;;AAEpC,AAAA,AAAA,AAAA,AAAKG;AAkBL,AAAA,AAAKC;AACL,AAAKC,AAAiB,AAAA,AAAKD;AAG3B,AAAA,AAAME,AAAUC,AAAMC,AAAiBC;AAAvC,AACM,AAAAC,AAAA,AAAAC,AAAoB,AAAyBa,AAAY,AAAA,AAAoBhB;AAA7EI,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQS;AAAR,AAAA,AACO,AAAA,AAAM,AAAW,AAASA;;AADjC;AAAA,AAAAb;AAAAE;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAC,AAAA,AAAAJ,AAAAD;AAAA,AAAA,AAAAK;AAAA,AAAA,AAAAL,AAAAK;AAAA,AAAA,AAAA,AAAAC,AAAAN;AAAA,AAAAO,AAAA,AAAAC,AAAAR;AAAA,AAAA,AAAA,AAAAS,AAAAT;AAAAO;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAX,AAAQa;AAAR,AAAA,AACO,AAAA,AAAM,AAAW,AAASA;;AADjC;AAAA,AAAA,AAAAD,AAAAZ;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAEA,AAAAe,AAAA,AAAAd,AAAY,AAAyBa,AAAY,AAAA,AAAYhB;AAA7DkB,AAAA;AAAAC,AAAA;AAAAC,AAAA;;AAAA,AAAA,AAAA,AAAA,AAAAA,AAAAD;AAAA,AAAA,AAAAD,AAAAE,AAAQC;AAAR,AAAA,AACO,AAAM,AAAaA,AAAK,AAAA,AAAA,AAACC,AAAY,AAAaD;;AADzD;AAAA,AAAAJ;AAAAC;AAAAC;AAAA,AAAAC,AAAA;;;;;;;AAAA,AAAAb,AAAA,AAAAJ,AAAAc;AAAA,AAAA,AAAAV;AAAA,AAAA,AAAAU,AAAAV;AAAA,AAAA,AAAA,AAAAC,AAAAS;AAAA,AAAAR,AAAA,AAAAC,AAAAO;AAAA,AAAA,AAAA,AAAAN,AAAAM;AAAAR;AAAA,AAAAG,AAAAH;AAAA;;;;;;;AAAA,AAAA,AAAAI,AAAAI,AAAQI;AAAR,AAAA,AACO,AAAM,AAAaA,AAAK,AAAA,AAAA,AAACC,AAAY,AAAaD;;AADzD;AAAA,AAAA,AAAAP,AAAAG;AAAA;AAAA;AAAA;;;;;;;;AAAA;;;;;AAEA,AAAA,AAAM,AAAW,AAAS,AAAiBD,AAAY,AAAA,AAAKf,AAAWD;;AACvE,AAAM,AAAa,AAAiBD,AAAQ,AAAA,AAAK,AAAa,AAAiBA;;AAGrF,AAAA,AAAMwB,AACHC;AADH,AAEE;AAAA,AACE,AAAAjB,AAAe,AAAiBS,AAAYQ;AAA5C,AAAA,AAAAjB;AAAA,AAAA,AAAAA,AAAWkB;AAAX,AACE,AAAA,AAAiBA;;AACjB,AAAA,AAAM,AAAaA;;AAEnB,AAAA,AAA4BC;AAA5B,AACU,AAAA,AAAS,AAAaD;;AACtB,AAAA,AAAsBT,AAAwBW;;AAFxD,AAGE,AAAA,AAAmBX,AAAwBW;;AAE7C,AAAApB,AAAqB,AAAWsB;AAAhC,AAAA,AAAAtB;AAAA,AAAA,AAAAA,AAAWqB;AAAX,AACE,AAAA,AAASC,AAAY,AAAA,AAAGD;;AAD1B;;;AATF","names":["dcs.prototype-6.util/now","js/Date","dcs.prototype-6.util/secs-to-now","start-time","dcs.prototype-6.util/date-str","year","quarter","q-map","dcs.prototype-6.util/vega-embed-opts","dcs.prototype-6.util/easier-repo","dcs.prototype-6.util/easier-repo-data","dcs.prototype-6.util/open-tab","event","tab-group-suffix","tab-id","seq__55564","cljs.core/seq","chunk__55565","count__55566","i__55567","temp__5735__auto__","cljs.core/chunked-seq?","c__4591__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","tab-content","js/document","seq__55568","chunk__55569","count__55570","i__55571","tab","clojure.string/replace","dcs.prototype-6.util/scroll-fn","id","ele","_e","mousedown-handler","scrolledY","js/window"],"sourcesContent":["(ns dcs.prototype-6.util\n  (:require [clojure.string :as str]))\n\n(defn now\n      \"Milliseconds since epoch\"\n      []\n      (.now js/Date))\n\n(defn secs-to-now\n      [start-time]\n      (double (/ (- (now) start-time) 1000)))\n\n(defn date-str\n      [year quarter]\n      (let [q-map {1 \"31 Mar\"\n                   2 \"30 Jun\"\n                   3 \"31 Aug\"\n                   4 \"31 Dec\"}]\n           (str (q-map quarter) \" \" year)))\n\n(def vega-embed-opts\n  ;; hide Vega's 3-dot menu\n  {:actions false}\n  ;; alternatively, to display Vega's 3-dot menu, uncomment...\n  #_{:actions          {:export   true\n                        :source   true\n                        :compiled false\n                        :editor   true}\n     :downloadFileName \"WasteMattersScotland-visualisation\"\n     :scaleFactor      2})\n\n;; For dcs-easier-open-data URLs I want to use the stem\n;;   https://github.com/data-commons-scotland/dcs-easier-open-data/raw/v1.0-beta/data/\n;; but it results in a \"redirect\"+\"cross site restriction\" problem.\n;; So, instead use the \"more direct\" stem:\n;; *****\n;; TODO: in the line below, change 'master' to a <tag> such as 'v1.3-beta' once the v1.3-beta tag has been created \n;; *****\n(def easier-repo \"https://raw.githubusercontent.com/data-commons-scotland/dcs-easier-open-data/master/\")\n(def easier-repo-data (str easier-repo \"data/\"))\n\n\n(defn open-tab [event tab-group-suffix tab-id]\n      (doseq [tab-content (.getElementsByClassName js/document (str \"tab-content-\" tab-group-suffix))]\n             (set! (.-display (.-style tab-content)) \"none\"))\n      (doseq [tab (.getElementsByClassName js/document (str \"tab-\" tab-group-suffix))]\n             (set! (.-className tab) (str/replace (.-className tab) \" is-active\" \"\")))\n      (set! (.-display (.-style (.getElementById js/document (str tab-id \"-\" tab-group-suffix)))) \"block\")\n      (set! (.-className (.-currentTarget event)) (str (.-className (.-currentTarget event)) \" is-active\")))\n\n\n(defn scroll-fn\n  [id]\n  (fn []\n    (when-let [ele (.getElementById js/document id)]\n      (.scrollIntoView ele true)\n      (.add (.-classList ele) \"is-selected\")\n      ;; a hacky way of de-selecting\n      (letfn [(mousedown-handler [_e]\n                (.remove (.-classList ele) \"is-selected\")\n                (.removeEventListener js/document \"mousedown\" mousedown-handler))]\n        (.addEventListener js/document \"mousedown\" mousedown-handler))\n      ;; allow for the navbar area when scrolling-into-view a specific element\n      (when-let [scrolledY (.-scrollY js/window)]\n        (.scroll js/window 0 (- scrolledY 65))))))\n\n"]}