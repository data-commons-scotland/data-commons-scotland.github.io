{"version":3,"sources":["dcs/prototype_6/view/regional_dashboard/household_waste_derivation_generation.cljs"],"mappings":";AASA,AAAA,AAAMA,AAAYC,AAAMC,AAAOC;AAA/B,AACE,AAAMC,AAAW,AAACC,AAAM,AAAA,AAACC,AAAeH;AAAxa1DM,AAAsBC,AACA,AAAA,AAAA,AAAA,AAACC,AAAwB,AAAA,AAAA,AAAA,AAAIH,AAC7B,AAAA,AAAA,AAAA,AAACG,AAAwB,AAAA,AAAA,AAAA,AAAIH;AAhCzD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAoCeN,AAISE,AACbI,AACAC;;AAEb,AAAA,AAAMG,AAAOT,AAAOU,AAAsCC;AAA1D,AACE,AACMC,AAAuC,AAAA,AAAAC,AAACC;AAAD,AAAS,AAAA,AAAA,AAAA,AAACC,AAAYf,AAAqC,AAAA,AAAAa;AAAaH;AAG/GM,AAAwC,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAD,AAAA,AAACE,AAAc,AAAK,AAAA,AAAAF;AACrBL;AAG7CQ,AAAyC,AAAA,AAACC,AAA4BV,AAAYK;AARxF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAWIM,AAAa,AAAA,AAACxB,AAAwCE,AAAOoB,AAC7DG,AACqE,AAAA,AAACC;;AAE5E,AAAA,AAAME;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AAAA,AAAAA,AACGhB,AAAOkB,AAAqBC,AAAoDC","names":["dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation/chart-spec","title","region","data","year-count","cljs.core/count","cljs.core/group-by","layer-normal","layer-annotations","dcs.prototype-6.annotation-mech/layer-annotations","cljs.core/assoc-in","dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation/chart","household-waste-derivation-generation","annotations","household-waste-derivation-generation'","p1__38602#","cljs.core.filter","cljs.core/contains?","household-waste-derivation-generation''","p1__38603#","cljs.core.map","cljs.core.assoc","household-waste-derivation-generation'''","dcs.prototype_6.annotation_mech.apply_annotations","oz.core/vega-lite","dcs.prototype-6.util/vega-embed-opts","goog.string/unescapeEntities","cljs.core/deref","dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation/root","dcs.prototype-6.state/region-cursor","dcs.prototype-6.state/household-waste-derivation-generation-cursor","dcs.prototype-6.state/annotations-derivation-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation\n  (:require\n   [oz.core :as oz]\n   [goog.string :as gstring]\n   [dcs.prototype-6.util :as util]\n   [dcs.prototype-6.annotation-mech :as anno-mech]\n   [dcs.prototype-6.state :as state]))\n\n\n(defn chart-spec [title region data]\n  (let [year-count (count (group-by :year data))\n        layer-normal {:mark       {:type  \"line\"\n                                   :point {:filled true}}\n                      :encoding   {:x          {:field    \"year\"\n                                                :type     \"temporal\"\n                                                :timeUnit \"year\"\n                                                :axis     {:tickCount year-count\n                                                           :title     \"year\"}}\n                                   :y          {:field \"tonnes\"\n                                                :type  \"quantitative\"\n                                                :scale {:zero false}\n                                                :axis  {:title \"tonnes\"}}\n                                   :strokeDash {:condition {:test  \"datum.region == 'Scot gov target'\"\n                                                            :value [3 3]}\n                                                :value     [0]}\n                                   :color      {:field  \"region\"\n                                                :type   \"nominal\"\n                                                :scale  {:domain [region \"Scotland\" \"Scot gov target\"]\n                                                         :range  [\"#fdae6b\" \"#1f77b4\" \"lightgrey\"]}\n                                                :legend {:title   nil\n                                                         :orient  \"bottom\"\n                                                         :columns 3}}\n                                   :tooltip    [{:field \"region\"\n                                                 :type  \"nominal\"\n                                                 :title \"subject\"}\n                                                {:field \"year\"\n                                                 :type  \"temporal\"}\n                                                {:field \"tonnes\"\n                                                 :type  \"quantitative\"\n                                                 :format \".3f\"}]}}\n        layer-annotations (-> anno-mech/layer-annotations\n                              (assoc-in [:encoding :x] (-> layer-normal :encoding :x))\n                              (assoc-in [:encoding :y] (-> layer-normal :encoding :y))\n                              #_(assoc-in [:mark :dy] -8)\n                              #_(assoc-in [:mark :dx] 0))]\n    {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n     :title      title\n     :width      200\n     :height     100\n     :background \"floralwhite\"\n     :data       {:values data}\n     :layer [layer-normal\n             layer-annotations]}))\n\n(defn chart [region household-waste-derivation-generation annotations]\n  (let [;; filter\n        household-waste-derivation-generation' (filter #(contains? #{region \"Scotland\" \"Scot gov target\"} (:region %)) household-waste-derivation-generation)\n\n        ;; stringify the year for Vega\n        household-waste-derivation-generation'' (map #(assoc % :year (str (:year %)))\n                                                     household-waste-derivation-generation')\n\n        ;; add annotation data\n        household-waste-derivation-generation''' (anno-mech/apply-annotations annotations household-waste-derivation-generation'' :household-waste-derivation-generation)]\n\n    [:div\n     [oz/vega-lite (chart-spec \"Waste generated per person\" region household-waste-derivation-generation''')\n      util/vega-embed-opts]\n     [:div#footnote-ref.content.has-text-left.has-text-info \"See footnote\" (gstring/unescapeEntities \"&nbsp;\") \"[a] about the \" [:em \"Scot gov target\"] \".\"]]))\n\n(defn root []\n  [chart @state/region-cursor @state/household-waste-derivation-generation-cursor @state/annotations-derivation-cursor])"]}