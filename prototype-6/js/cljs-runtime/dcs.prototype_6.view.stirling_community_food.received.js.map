{"version":3,"sources":["dcs/prototype_6/view/stirling_community_food/received.cljs"],"mappingseA,AACSD;;AAyCxcD;;AA8B7C,AAAA,AAAMG,AACCH,AAAKC;AADZ,AAEM,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACG,AAAS,AAACF,AAAqBF,AAAKC;;AAG3C,AAAA,AAAMI,AAAQC;AAAd,AACM,AAAMC,AACgB,AAAA,AAAAC,AAACC;AAAD,AAAS,AAAA,AAACC,AAAO,AAAA,AAAAF;AADjBF;AAAtB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AASUK,AAAa,AAAA,AAACZ,AAAsBQ,AACpCK,AAOyD,AAAA,AAACC,AAE/C,AAAA,AAACA,AAMZF,AAAa,AAAA,AAACT,AAAqBK,AACnCK,AAEAD,AAAa,AAAA,AAACR,AAAiCI,AAC/CK;;AAEhB,AAAA,AAAMG;AAAN,AAAA,AAAA,AAAAD,AACOT,AACCW","names":["dcs.prototype-6.view.stirling-community-food.received/chart-spec-per-source","data","title","dcs.prototype-6.view.stirling-community-food.received/chart-spec-per-month","dcs.prototype-6.view.stirling-community-food.received/chart-spec-per-month-logarithmic","cljs.core/assoc-in","dcs.prototype-6.view.stirling-community-food.received/charts","derivation-tonnes","chart-data","p1__44853#","cljs.core.filter","cljs.core._EQ_","oz.core/vega-lite","dcs.prototype-6.util/vega-embed-opts","goog.string/unescapeEntities","cljs.core/deref","dcs.prototype-6.view.stirling-community-food.received/root","dcs.prototype-6.state/stirling-community-food-tonnes-derivation-tonnes-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.stirling-community-food.received\n  (:require\n    [oz.core :as oz]\n    [goog.string :as gstring]\n    [dcs.prototype-6.util :as util]\n    [dcs.prototype-6.state :as state]))\n\n\n(defn chart-spec-per-source\n  [data title]\n  {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n   :width      370\n   :height     200\n   :background \"#fff1e5\"\n   :title      title\n   :data       {:values data}\n   :transform  [{:calculate \"datum['counter-party']\"\n                 :as        \"source\"}\n                {:aggregate [{:op    \"sum\"\n                              :field \"tonnes\"\n                              :as    \"tonnes\"}]\n                 :groupby   [\"source\"]}]\n   :mark       {:type                 \"bar\"\n                :cornerRadiusTopLeft  3\n                :cornerRadiusTopRight 3}\n   :encoding   {:x       {:field \"source\"\n                          :type  \"nominal\"\n                          :axis  {:labelAngle 45\n                                  :labelBound 45}\n                          :sort  {:field \"tonnes\"\n                                  :order \"descending\"}}\n                :y       {:field \"tonnes\"\n                          :type  \"quantitative\"}\n                :color   {:field  \"source\"\n                          :type   \"nominal\"\n                          :scale  {:domain [\"Purchased\"\n                                            \"Donated not waste\"\n                                            \"Local supermarkets\"\n                                            \"Fareshare\"\n                                            \"Donated as waste\"\n                                            \"Other\"]\n                                   :range  [\"#FFC473\"\n                                            \"#7158A1\"\n                                            \"#006CAE\"\n                                            \"#59896A\"\n                                            \"#BF5748\"\n                                            \"#928E85\"]}\n                          :legend {:symbolType \"circle\"\n                                   :orient     \"bottom\"\n                                   :columns    4}}\n                :tooltip [{:field \"source\"\n                           :type  \"nominal\"}\n                          {:field \"tonnes\"\n                           :type  \"quantitative\"\n                           :format \".3f\"}]}})\n\n(defn chart-spec-per-month\n  [data title]\n      {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n                        :width      370\n                        :height     200\n                        :background \"#fff1e5\"\n                        :title title\n                        :data       {:values data}\n                        :transform  [{:calculate \"datum['counter-party']\" :as \"source\"}\n                                     {:timeUnit \"yearmonth\" :field \"yyyy-MM-dd\" :as \"month\"}\n                                     {:aggregate [{:op \"sum\" :field \"tonnes\" :as \"tonnes\"}]\n                                      :groupby [\"month\" \"source\"]}]\n                        :mark       {:type \"line\"\n                                     :point {:filled false :fill \"#fff1e5\"}}\n                        :encoding   {:x       {:field \"month\" :type \"temporal\"\n                                               :axis {:format \"%b %y\"\n                                                      :labelAngle 60\n                                                      :labelBound 45}}\n                                     :y       {:field \"tonnes\" :type \"quantitative\"}\n                                     :color   {:field \"source\" :type \"nominal\"\n                                               :scale {:domain [\"Purchased\"\n                                                                \"Donated not waste\"\n                                                                \"Local supermarkets\"\n                                                                \"Fareshare\"\n                                                                \"Donated as waste\"\n                                                                \"Other\"]\n                                                       :range  [\"#FFC473\"\n                                                                \"#7158A1\"\n                                                                \"#006CAE\"\n                                                                \"#59896A\"\n                                                                \"#BF5748\"\n                                                                \"#928E85\"]}\n                                               :legend nil #_{:orient \"bottom\" :columns 4}}\n                                     :tooltip [{:field \"source\" :type \"nominal\"}\n                                               {:field \"month\" :type \"temporal\" :format \"%b %Y\"}\n                                               {:field \"tonnes\" :type \"quantitative\" :format \".3f\"}]}})\n\n(defn chart-spec-per-month-logarithmic\n      [data title]\n      (assoc-in (chart-spec-per-month data title) [:encoding :y :scale] {:type \"log\"}))\n\n\n(defn charts [derivation-tonnes]\n      (let [chart-data (->> derivation-tonnes\n                            (filter #(= \"in\" (:io-direction %))))]\n\n           [:div.tile.is-ancestor\n\n            [:div.tile.is-6\n             [:div.tile.is-vertical.is-parent\n\n              [:div.tile.is-child\n               [oz/vega-lite (chart-spec-per-source chart-data \"Graph 2: Incoming amount per source\")\n                util/vega-embed-opts]]\n              [:div.tile.is-child.content\n               [:p \"Graph 2 shows \" [:em \"Local supermarkets\"] \" to be the source that supplied the most food material during the year. \"\n                \"(\" [:em \"Local supermarkets\"] \" is an aggregation of the collection agencies Neighbourly & Foodiverse,\"\n                \" and of the supermarkets Sainsbury's & Cooperative.)\"]\n               [:p \"Graphs 3 & 4 provide month-by-month breakdowns, with Graph 4  \n               using a non-linear scale to make differences more obvious.\n               The high value for \" [:em \"Local supermarkets\"] \" in Apr\" (gstring/unescapeEntities \"&nbsp;\") \"21 is because one of its constituent\"\n                \" organisations - Foodiverse - does not report its figures on a monthly basis; instead it reports on a batch of previous months every so often,\"\n               \" with Apr\" (gstring/unescapeEntities \"&nbsp;\") \"21 being an instance of that.\"]]]]\n\n            [:div.tile\n             [:div.tile.is-vertical.is-parent\n\n              [:div.tile.is-child\n               [oz/vega-lite (chart-spec-per-month chart-data \"Graph 3: Incoming amounts per month\")\n                util/vega-embed-opts]]\n              [:div.tile.is-child\n               [oz/vega-lite (chart-spec-per-month-logarithmic chart-data \"Graph 4: Incoming amounts per month (non-linear)\")\n                util/vega-embed-opts]]]]]))\n\n(defn root []\n      [charts\n       @state/stirling-community-food-tonnes-derivation-tonnes-cursor])"]}