{"version":3,"sources":["dcs/prototype_6/data_wrangling.cljs"],"mappings":";AAGA,AAAA,AAAMA,AAAgCC;AAAtC,AAGW,AAACE,AAAI,AAAAC;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAWG;AAAX,AAAA,AAAA,AAAA,AAAA,AAAA,AAC+BD,AACKC,AACA,AAAA,AAACL,AACD,AAACM,AAAMC;AANhDT,AACA,AAAA,AAACC;;AAQZ,AAAA,AAAMS,AAAoCC;AAA1C,AAGW,AAACT,AAAI,AAAAU;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAP,AAAAQ,AAAA,AAAA,AAAMP;AAAN,AAAAD,AAAAQ,AAAA,AAAA,AAAWN;AAAX,AAAA,AAAA,AAAA,AAAA,AAAA,AAC2BD,AACKC,AACA,AAAA,AAACL,AACD,AAACM,AAAMC;AAN5CE,AACA,AAAA,AAACV;;AAQZ,AAAA,AAAMa,AAAsBC;AAA5B,AAGW,AAACb,AAAI,AAAAe;AAAA,AAAA,AAAAC,AAAAD;AAAAE,AAAA,AAAAd,AAAAa,AAAA,AAAA;AAAA,AAAAb,AAAAc,AAAA,AAAA,AAAOC;AAAP,AAAAf,AAAAc,AAAA,AAAA,AAAcb;AAAd,AAAAD,AAAAa,AAAA,AAAA,AAAoBX;AAApB,AAAA,AAAA,AAAA,AAAA,AAAoCa,AACAd,AACKC,AACA,AAAA,AAACL,AACD,AAACM,AAAMC;AANrDM,AACA,AAACd,AAAS,AAAA,AAAA,AAACe;;AAOtB,AAAA,AAAMK,AAA0CC;AAAhD,AAGW,AAACpB,AAAI,AAAAqB;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAlB,AAAAmB,AAAA,AAAA,AAAMlB;AAAN,AAAAD,AAAAmB,AAAA,AAAA,AAAWjB;AAAX,AAAA,AAAA,AAAA,AAAA,AAAA,AAC2BD,AACKC,AACA,AAAA,AAACL,AACD,AAACM,AAAMC;AAN5Ca,AACA,AAAA,AAACrB","names":["dcs.prototype-6.data-wrangling/population-values-for-scotland","population","cljs.core/group-by","cljs.core.map","p__26459","vec__26460","cljs.core.nth","year","coll","cljs.core.apply","cljs.core/+","dcs.prototype-6.data-wrangling/household-co2e-values-for-scotland","household-co2e","p__26463","vec__26464","dcs.prototype-6.data-wrangling/household-waste-3dim","household-waste","cljs.core.juxt","p__26467","vec__26468","vec__26471","region","dcs.prototype-6.data-wrangling/household-waste-3dim-values-for-scotland","household-waste-3dim","p__26474","vec__26475"],"sourcesContent":["(ns dcs.prototype-6.data-wrangling)\n\n;; Roll-up to get values for all of Scotland\n(defn population-values-for-scotland [population]\n      (->> population\n           (group-by :year)\n           (map (fn [[year coll]] {:region     \"Scotland\"\n                                   :year       year\n                                   :population (->> coll\n                                                    (map :population)\n                                                    (apply +))}))))\n\n;; Roll-up to get values for all of Scotland\n(defn household-co2e-values-for-scotland [household-co2e]\n      (->> household-co2e\n           (group-by :year)\n           (map (fn [[year coll]] {:region \"Scotland\"\n                                   :year   year\n                                   :tonnes (->> coll\n                                                (map :tonnes)\n                                                (apply +))}))))\n\n;; Roll-up the :management and :material dimensions\n(defn household-waste-3dim [household-waste]\n      (->> household-waste\n           (group-by (juxt :region :year))\n           (map (fn [[[region year] coll]] {:region region\n                                            :year   year\n                                            :tonnes (->> coll\n                                                         (map :tonnes)\n                                                         (apply +))}))))\n\n(defn household-waste-3dim-values-for-scotland [household-waste-3dim]\n      (->> household-waste-3dim\n           (group-by :year)\n           (map (fn [[year coll]] {:region \"Scotland\"\n                                   :year   year\n                                   :tonnes (->> coll\n                                                (map :tonnes)\n                                                (apply +))}))))"]}