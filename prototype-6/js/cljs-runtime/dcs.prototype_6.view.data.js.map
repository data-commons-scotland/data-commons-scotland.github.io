{"version":3,"sources":["dcs/prototype_6/view/data.cljs"],"mappings":";AAOA,AAAA,AAAAA,AAAMI;AAAN,AAAA,AAAAH,AAAAD;AAAAC,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAF,AAAA,AACWI;AADX,AAAAF,AAAAF,AAAA,AACgBK;AADhB,AAAAH,AAAAF,AAAA,AAC6DM;AAD7D,AAAAJ,AAAAF,AAAA,AACqEO;AADrE,AAAAL,AAAAF,AAAA,AAC8EQ;AAD9E,AAAAN,AAAAF,AAAA,AACyFS;AADzF,AAAAP,AAAAF,AAAA,AACiGU;AADjG,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEYN,AACiBA,AACrBC,AAEa,AAAKM,AAAsB,AAAA,AAAKP,AAEhC,AAAKO,AAAsB,AAAA,AAAKP,AAEhC,AAAKO,AAAsB,AAAA,AAAKP,AAEhC,AAAKO,AAAsB,AAAA,AAAKP,AAE7CE,AACaE,AACUD,AACVG,AACUD;;AAG/B,AAAA,AAAOG,AACJC,AAAUC;AADb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAGGD,AAEgBC;;AAGnB,AAAA,AAAMC,AACHC,AAAMC;AADT,AAEE,AAAMC,AAAO,AAAAC,AAAQH;AAARG,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAAA;AAAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAAA;AAAA,AAAA,AAAA,AAAAA,AAAA;AAAA;;AAAA,AAAA,AAAAA;;;AAAb,AAEE,AAAMD;AAAN,AAAa,AAACE,AAAe,AAACC,AAAeoC,AAACI,AAAML,AACL,AAAA,AAACM,AAawC,AAAA,AAACC,AACnC,AAAA,AAAA,AAAA,AAAA,AAACZ,AAKf,AAAA,AAAA,AAACA,AACD,AAAA,AAAA,AAACA,AACD,AAAA,AAAA,AAACA,AAEvB,AAACa,AAAItB,AAAY,AAAA,AAACuB,AAAcT,AAIf,AAAA,AAAKN,AACL,AAAA,AAAKA,AACL,AAAA,AAAKA,AACL,AAAA,AAAKA;;AAMjC,AAAA,AAAMiB,AAAMZ;AAAZ,AAAA,AAAA,AAAAW,AACGZ,AACAC,AACCa","names":["p__39960","map__39961","cljs.core/--destructure-map","cljs.core.get","dcs.prototype-6.view.data/dataset-row","name","description","creator","supplier","supply-url","licence","licence-url","dcs.prototype-6.util/easier-repo-data","dcs.prototype-6.view.data/tooltip","main-text","tooltip-text","dcs.prototype-6.view.data/ele","route","metas","target","G__39962","reagent.core/after-render","dcs.prototype-6.util/scroll-fn","cljs.core/count","reitit.frontend.easy.href","goog.string/unescapeEntities","cljs.core.map","cljs.core.sort_by","cljs.core/deref","dcs.prototype-6.view.data/root","dcs.prototype-6.state/meta-derivation-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.data\n  (:require [reitit.frontend.easy :as rfe]\n            [reagent.core :as r]\n            [goog.string :as gstring]\n            [dcs.prototype-6.state :as state]\n            [dcs.prototype-6.util :as util]))\n\n(defn dataset-row\n  [{:keys [name description #_record-count #_attribute-count creator supplier supply-url licence licence-url]}]\n  [:tr {:id name}\n   [:td.has-text-weight-bold name]\n   [:td description]\n   #_[:td record-count \" x \" attribute-count]\n   [:td [:a {:href   (str util/easier-repo-data (str name \".csv\"))\n             :target \"_blank\"} \"CSV\"]]\n   [:td [:a {:href   (str util/easier-repo-data (str name \".json\"))\n             :target \"_blank\"} \"JSON\"]]\n   [:td [:a {:href   (str util/easier-repo-data (str name \".ttl\"))\n             :target \"_blank\"} \"Turtle\"]]\n   [:td [:a {:href   (str util/easier-repo-data (str name \"-metadata.json\"))\n             :target \"_blank\"} \"CSVW\"]]\n   [:td creator]\n   [:td [:a {:href   supply-url\n             :target \"_blank\"} supplier]]\n   [:td [:a {:href   licence-url\n             :target \"_blank\"} licence]]])\n\n\n(defn- tooltip\n  [main-text tooltip-text]\n  [:span.icon-text {:style {:display \"inline-block\" :white-space \"nowrap\"}}\n   main-text\n   [:span.icon.is-small.has-tooltip-bottom.has-tooltip-multiline.has-tooltip-info.has-text-danger\n    {:data-tooltip tooltip-text}\n    [:i.fas.fa-info-circle.fa-xs]]])\n\n(defn ele\n  [route metas]\n  (let [target (some-> route :parameters :query :target)]\n    ;(js/console.log (str \"target=\" target))\n    (when target (r/after-render (util/scroll-fn target)))\n\n    [:div\n\n     [:section.hero {:style {:backgroundColor \"#fff1e5\"}}\n      [:div.hero-body\n\n       [:div.content.has-text-centered\n        [:h1.title.is-5 [:span \"The \" (count metas) \n                         \" \" [:a {:href (rfe/href :dcs.prototype-6.router/easier-open-data-view)} [:em \"easier\"]]\n                         \" datasets that are used on this site\"]]]\n\n       [:div.container\n        [:div.content\n         [:table#easier-table-fff1e5.table.is-hoverable.is-narrow\n          [:thead\n           [:tr.has-text-left\n            [:th.has-text-danger {:col-span 6} [:span \"dataset\"]]\n            [:th.has-text-danger {:col-span 3} [:span \"source\"]]]\n           [:tr.has-text-left\n            [:th.has-text-danger {:row-span 2} \"name\"]\n            [:th.has-text-danger {:row-span 2} \"description\"]\n            [:th.has-text-danger {:col-span 3} [:span \"the data\" \" \" [:span \"(3\" (gstring/unescapeEntities \"&nbsp;\") \"formats)\"]]]\n            [:th.has-text-danger {:row-span 2} (tooltip [:span \"its spec\"] \"a machine-oriented description of the data's: entity URI; column names, types, references; etc.\")]\n            [:th.has-text-danger \"creator\"]\n            [:th.has-text-danger \"supplier\"]\n            [:th.has-text-danger \"licence\"]]\n           [:tr.has-text-left\n            [:th.has-text-danger (tooltip \"CSV\" \" a simple tabular, human-oriented format\")]\n            [:th.has-text-danger (tooltip \"JSON\" \"a machine-oriented format used by many software tools\")]\n            [:th.has-text-danger (tooltip \"Turtle\" \"a machine-oriented format used by linked data (RDF) tools\")]]]\n          [:tbody \n           (map dataset-row (sort-by :name metas))\n           [:tr {:id \"zip-bundles\"}\n            [:td]\n            [:td [:em \"(handy ZIP bundles)\"]]\n            [:td [:a {:href (str util/easier-repo-data \"all-csv.zip\") :target \"_blank\"} \"ZIP\"]]\n            [:td [:a {:href (str util/easier-repo-data \"all-json.zip\") :target \"_blank\"} \"ZIP\"]]\n            [:td [:a {:href (str util/easier-repo-data \"all-turtle.zip\") :target \"_blank\"} \"ZIP\"]]\n            [:td [:a {:href (str util/easier-repo-data \"all-csvw.zip\") :target \"_blank\"} \"ZIP\"]]\n            [:td]\n            [:td]\n            [:td]]]]]]]]]))\n\n\n(defn root [route]\n  [ele\n   route\n   @state/meta-derivation-cursor])\n\n\n"]}