{
"version":3,
"file":"module$node_modules$$react_leaflet$core$cjs$control.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGhHA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,iBAAR,CAMAA,QAA0B,CAACC,UAAD,CAAa,CACrC,MAAOC,SAA0B,CAACC,KAAD,CAAQ,CACvC,IAAMC,QAAU,CAAC,CAAA,CAAGC,QAASC,CAAAA,iBAAb,GAAhB,CACMC,WAAaN,UAAA,CAAWE,KAAX,CAAkBC,OAAlB,CADnB,CAGEI,SACED,UAAWE,CAAAA,OADb,CAAA,QAHF,CAKMC,YAAc,CAAC,CAAA,CAAGC,MAAOC,CAAAA,MAAX,EAAmBT,KAAMU,CAAAA,QAAzB,CALpB,CAOEA,SACEV,KADF,CAAA,QAEF,EAAC,CAAA,CAAGQ,MAAOG,CAAAA,SAAX,EAAsBC,QAAmB,EAAG,CAC1CP,QAASQ,CAAAA,KAAT,CAAeZ,OAAQa,CAAAA,GAAvB,CACA,OAAOC,SAAsB,EAAG,CAC9BV,QAASW,CAAAA,MAAT,EAD8B,CAFU,CAA5C,CAKG,CAACf,OAAQa,CAAAA,GAAT,CAAcT,QAAd,CALH,CAMA;CAAC,CAAA,CAAGG,MAAOG,CAAAA,SAAX,EAAsBM,QAAsB,EAAG,CAC7B,IAAhB,EAAIP,QAAJ,EAAwBA,QAAxB,GAAqCH,WAAYD,CAAAA,OAAjD,GACED,QAASa,CAAAA,WAAT,CAAqBR,QAArB,CACA,CAAAH,WAAYD,CAAAA,OAAZ,CAAsBI,QAFxB,CAD6C,CAA/C,CAKG,CAACL,QAAD,CAAWK,QAAX,CALH,CAMA,OAAON,WAtBgC,CADJ,CAJvC,KAAII,OAASf,OAAA,CAAQ,iCAAR,CAAb,CAEIS,SAAWT,OAAA,CAAQ,qDAAR,CARiG;",
"sources":["node_modules/@react-leaflet/core/cjs/control.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$react_leaflet$core$cjs$control\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.createControlHook = createControlHook;\n\nvar _react = require(\"react\");\n\nvar _context = require(\"./context\");\n\nfunction createControlHook(useElement) {\n  return function useLeafletControl(props) {\n    const context = (0, _context.useLeafletContext)();\n    const elementRef = useElement(props, context);\n    const {\n      instance\n    } = elementRef.current;\n    const positionRef = (0, _react.useRef)(props.position);\n    const {\n      position\n    } = props;\n    (0, _react.useEffect)(function addControl() {\n      instance.addTo(context.map);\n      return function removeControl() {\n        instance.remove();\n      };\n    }, [context.map, instance]);\n    (0, _react.useEffect)(function updateControl() {\n      if (position != null && position !== positionRef.current) {\n        instance.setPosition(position);\n        positionRef.current = position;\n      }\n    }, [instance, position]);\n    return elementRef;\n  };\n}\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","createControlHook","useElement","useLeafletControl","props","context","_context","useLeafletContext","elementRef","instance","current","positionRef","_react","useRef","position","useEffect","addControl","addTo","map","removeControl","remove","updateControl","setPosition"]
}
