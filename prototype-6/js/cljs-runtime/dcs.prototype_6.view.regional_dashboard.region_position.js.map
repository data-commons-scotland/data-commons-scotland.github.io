{"version":3,"sources":["dcs/prototype_6/view/regional_dashboard/region_position.cljs"],"mappings":";AAIA,AAAA,AAAMA,AAAQC;AAAd,AACM,AAAI,AAAA,AAAGA;AAAP;;AAAA;;;AAIN,AAAA,AAAMC,AAAQD;AAAd,AACM,AAAME,AAAE,AAAKF;AAAb,AACK,AACE,AAAA,AAACG,AAAeD;AADlB;;AAAA,AAEE,AAAA,AAACC,AAAeD;AAFlB;;AAAA,AAGE,AAAA,AAACC,AAAeD;AAHlB;;AAAA,AAIE,AAAA,AAACC,AAAeD;AAJlB;;AAAA,AAKE,AAAA,AAACC,AAAeD;AALlB;;AAAA,AAAA;;;;;;;;AAQX,AAAA,AAAME,AAAKC,AACAC,AACAC,AACAC;AAHX,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAkBS,AAAMC,AAAgB,AAAA,AAAA,AAEK,AAAA,AAAAC,AAACC,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAK;AAFnBJ,AAEA,AAAA;AAGrBQ,AAAe,AAAA,AAAA,AAEK,AAAA,AAAAC,AAACJ,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAU;AAFnBT,AAEA,AAAA;AAP1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAWmB,AAACP,AAAOe,AAAiB,AAAKA,AAAe,AAACb,AAAOa,AACrD,AAACf,AAAOU,AAAkB,AAAKA,AAAgB,AAACR,AAAOQ;AAE1E,AAAMA,AAAgB,AAAA,AAAA,AAEK,AAAA,AAAAO,AAACL,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAW;AAFnBR,AAEA,AAAA;AAIrBM,AAAe,AAAA,AAAA,AAEK,AAAA,AAAAG,AAACN,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAY;AAFnBT,AAEA,AAAA;AAR1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAYmB,AAACT,AAAOe,AAAiB,AAAKA,AAAe,AAACb,AAAOa,AACrD,AAACf,AAAOU,AAAkB,AAAKA,AAAgB,AAACR,AAAOQ;AAE1E,AAAMA,AAAgB,AAAA,AAAA,AAEK,AAAA,AAAAS,AAACP,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAa;AAFnBX,AAEA,AAAA;AAGrBO,AAAe,AAAA,AAAA,AAEK,AAAA,AAAAK,AAACR,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAc;AAFnBZ,AAEA,AAAA;AAP1B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAWmB,AAACR,AAAOe,AAAiB,AAAKA,AAAe,AAACb,AAAOa,AACrD,AAACf,AAAOU,AAAkB,AAAKA,AAAgB,AAACR,AAAOQ;;;AAGnF,AAAA,AAAMY;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AAAA,AAAAA,AAAA,AAAAA,AACOhB,AACCkB,AACAC,AACAC,AACAC","names":["dcs.prototype-6.view.regional-dashboard.region-position/colour","n","dcs.prototype-6.view.regional-dashboard.region-position/suffix","s","clojure.string/ends-with?","dcs.prototype-6.view.regional-dashboard.region-position/ele","region","household-waste-derivation-generation-positions","household-waste-derivation-percent-recycled-positions","household-co2e-derivation-generation-positions","latest-position","p1__50923#","cljs.core.filter","cljs.core._EQ_","cljs.core/first","trend-position","p1__50924#","p1__50925#","p1__50926#","p1__50927#","p1__50928#","cljs.core/deref","dcs.prototype-6.view.regional-dashboard.region-position/root","dcs.prototype-6.state/region-cursor","dcs.prototype-6.state/household-waste-derivation-generation-positions-cursor","dcs.prototype-6.state/household-waste-derivation-percent-recycled-positions-cursor","dcs.prototype-6.state/household-co2e-derivation-generation-positions-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.regional-dashboard.region-position\n  (:require [clojure.string :as str]\n            [dcs.prototype-6.state :as state]))\n\n(defn colour [n]\n      (if (< n 17)\n        \"has-text-success-dark\"\n        \"has-text-danger-dark\"))\n\n(defn suffix [n]\n      (let [s (str n)]\n           (cond\n             (str/ends-with? s \"11\") \"th\"\n             (str/ends-with? s \"12\") \"th\"\n             (str/ends-with? s \"13\") \"th\"\n             (str/ends-with? s \"1\") \"st\"\n             (str/ends-with? s \"2\") \"nd\"\n             :else \"th\")))\n\n(defn ele [region\n           household-waste-derivation-generation-positions\n           household-waste-derivation-percent-recycled-positions\n           household-co2e-derivation-generation-positions]\n\n      [:div\n       [:table#league-table.table.is-hoverable\n        [:thead\n         [:tr\n          [:th \"\"]\n          [:th {:colSpan 2} \"Position\"]]\n         [:tr\n          [:th \"Aim\"]\n          [:th \"Trend\"]\n          [:th \"Latest\"]]]\n\n        [:tbody\n\n         (let [latest-position (->> household-waste-derivation-generation-positions\n                                    :latest-positions\n                                    (filter #(= region (:region %)))\n                                    first\n                                    :position)\n               trend-position (->> household-waste-derivation-generation-positions\n                                   :trend-positions\n                                   (filter #(= region (:region %)))\n                                   first\n                                   :position)]\n              [:tr [:td \"Reduce waste generation\"]\n               [:td {:class (colour trend-position)} (str trend-position (suffix trend-position))]\n               [:td {:class (colour latest-position)} (str latest-position (suffix latest-position))]])\n\n         (let [latest-position (->> household-co2e-derivation-generation-positions\n                                    :latest-positions\n                                    (filter #(= region (:region %)))\n                                    first\n                                    :position\n                                    )\n               trend-position (->> household-co2e-derivation-generation-positions\n                                   :trend-positions\n                                   (filter #(= region (:region %)))\n                                   first\n                                   :position)]\n              [:tr [:td \"Reduce carbon impact\"]\n               [:td {:class (colour trend-position)} (str trend-position (suffix trend-position))]\n               [:td {:class (colour latest-position)} (str latest-position (suffix latest-position))]])\n\n         (let [latest-position (->> household-waste-derivation-percent-recycled-positions\n                                    :latest-positions\n                                    (filter #(= region (:region %)))\n                                    first\n                                    :position)\n               trend-position (->> household-waste-derivation-percent-recycled-positions\n                                   :trend-positions\n                                   (filter #(= region (:region %)))\n                                   first\n                                   :position)]\n              [:tr [:td \"Increase percentage recycled\"]\n               [:td {:class (colour trend-position)} (str trend-position (suffix trend-position))]\n               [:td {:class (colour latest-position)} (str latest-position (suffix latest-position))]])]]])\n\n\n(defn root []\n      [ele\n       @state/region-cursor\n       @state/household-waste-derivation-generation-positions-cursor\n       @state/household-waste-derivation-percent-recycled-positions-cursor\n       @state/household-co2e-derivation-generation-positions-cursor])"]}