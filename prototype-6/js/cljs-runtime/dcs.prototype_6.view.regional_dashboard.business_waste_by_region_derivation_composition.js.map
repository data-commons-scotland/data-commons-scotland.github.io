{"version":3,"sources":["dcs/prototype_6/view/regional_dashboard/business_waste_by_region_derivation_composition.cljs"],"mappings":";AAQA,AAAA,AAAMA,AAAYC,AAAMC,AAAOC;AAA/B,AACM,AAAMC,AAAW,AAACC,AAAM,AAAA,AAACC,AAAeH;AAAxkBF,AAISE,AAOoEC;;AASrG,AAAA,AAAMG,AAAOL,AAAOM;AAApB,AACM,AACMC,AAAiD,AAAA,AAAAC,AAACC;AAAD,AAAS,AAACC,AAAEV,AAAO,AAAA,AAAAQ;AAAaF;AAGjFK,AAAkD,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAD,AAAA,AAACE,AAAc,AAAK,AAAA,AAAAF;AACrBL;AAL7D,AAAA,AAAA,AAAA,AAOOQ,AAAa,AAAA,AAACjB,AAAyBE,AAAOW,AAC9CK;;AAEb,AAAA,AAAME;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AACOZ,AAAOc,AAAqBC","names":["dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition/chart-spec","title","region","data","year-count","cljs.core/count","cljs.core/group-by","dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition/chart","business-waste-by-region-derivation-composition","business-waste-by-region-derivation-composition'","p1__27981#","cljs.core.filter","cljs.core._EQ_","business-waste-by-region-derivation-composition''","p1__27982#","cljs.core.map","cljs.core.assoc","oz.core/vega-lite","dcs.prototype-6.util/vega-embed-opts","cljs.core/deref","dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition/root","dcs.prototype-6.state/region-cursor","dcs.prototype-6.state/business-waste-by-region-derivation-composition-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition\n  (:require\n    [reagent.core :as r]\n    [oz.core :as oz]\n    [dcs.prototype-6.util :as util]\n    [dcs.prototype-6.state :as state]))\n\n\n(defn chart-spec [title region data]\n      (let [year-count (count (group-by :year data))]\n           {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n            :title      title\n            :width      200\n            :height     100\n            :background \"floralwhite\"\n            :data       {:values data}\n            :mark       {:type                 \"bar\"\n                         :cornerRadiusTopLeft  3\n                         :cornerRadiusTopRight 3}\n            :selection  {:my {:type   \"multi\"\n                              :fields [\"region\"]\n                              :bind   \"legend\"}}\n            :encoding   {:x       {:field \"year\" :type \"temporal\" :timeUnit \"year\" :axis {:tickCount year-count :title \"year\"}}\n                         :y       {:field \"tonnes\" :type \"quantitative\" :scale {:zero false} :axis {:title \"tonnes\"}}\n                         :color   {:field \"material\" :type \"nominal\" :scale {:scheme \"tableau20\"} :legend nil #_{:orient \"bottom\" :columns 3}}\n                         :opacity {:condition {:selection \"my\" :value 1}\n                                   :value     0.2}\n                         :tooltip [{:field \"material\" :type \"nominal\"}\n                                   {:field \"year\" :type \"temporal\"}\n                                   {:field \"tonnes\" :type \"quantitative\"}]}}))\n\n(defn chart [region business-waste-by-region-derivation-composition]\n      (let [;; filter\n            business-waste-by-region-derivation-composition' (filter #(= region (:region %)) business-waste-by-region-derivation-composition)\n\n            ;; stringify the year for Vega\n            business-waste-by-region-derivation-composition'' (map #(assoc % :year (str (:year %)))\n                                                                   business-waste-by-region-derivation-composition')]\n           [:div\n            [oz/vega-lite (chart-spec \"Composition\" region business-waste-by-region-derivation-composition'')\n             util/vega-embed-opts]]))\n\n(defn root []\n      [chart @state/region-cursor @state/business-waste-by-region-derivation-composition-cursor])"]}