{"version":3,"sources":["dcs/prototype_6/view/fairshare/cars_worth.cljs"],"mappingssB5B,AAAA,AAAMC,AAAQC;AAAd,AACM,AAAMC,AAcc,AAACC,AAAI,AAAAgB,AAMLK,AAEA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAGD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACA;AAXI,AAAA,AAAAL,AAAAD;AAAAC,AAAA,AAAAd,AAAAc;AAAA,AAAAb,AAAAa,AAAA,AAAaL;AAAb,AAAAR,AAAAa,AAAA,AAAkBlB;AAAlB,AACI,AAAMmB,AAAY,AAAA,AAAK,AAACC,AAAWpB;AAAnC,AACK,AAAA,AAAA,AAAA,AAAA,AAAA,AAACqB,AAAOF,AACON,AAEOM;AAXpC,AAAClB,AAAI,AAAAS;AAAA,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAD,AAAA,AAAA,AAAME;AAAN,AAAAD,AAAAD,AAAA,AAAA,AAAWG;AAAX,AAAA,AAAA,AAAA,AACWD,AACSC,AACA,AAAA,AAACb,AACD,AAACc,AAAMC;AAThC,AAACf,AAAI,AAAAC,AAIL,AAAA,AAACO;AAJI,AAAA,AAAAN,AAAAD;AAAAC,AAAA,AAAAC,AAAAD;AAAA,AAAAE,AAAAF,AAAA,AAAaG;AAAb,AAAAD,AAAAF,AAAA,AAAwBI;AAAxB,AAAA,AAAA,AAAA,AACW,AAAA,AAAK,AAAA,AAAA,AAACC,AAAKF,AACP,AAAA,AAAGC;AALvBR;AAApB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAmCKyB,AAAa,AAAC5B,AAAsBI,AACpCyB;;AAcX,AAAA,AAAME;AAAN,AAAA,AAAA,AAAAD,AACO5B,AACC8B","names":["dcs.prototype-6.view.fairshare.cars-worth/chart-spec-cars-worth","data","dcs.prototype-6.view.fairshare.cars-worth/charts","co2e","car-co2e","cljs.core.map","p__28092","map__28093","cljs.core/--destructure-map","cljs.core.get","yyyy-MM-dd","tonnes","cljs.core.subs","cljs.core/group-by","p__28088","vec__28089","cljs.core.nth","year","coll","cljs.core.apply","cljs.core/+","p__28086","map__28087","num-of-cars","Math/round","cljs.core.repeat","cljs.core/flatten","cljs.core/cons","oz.core/vega-lite","dcs.prototype-6.util/vega-embed-opts","cljs.core/deref","dcs.prototype-6.view.fairshare.cars-worth/root","dcs.prototype-6.state/fairshare-co2e-derivation-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.fairshare.cars-worth\n  (:require\n    [reagent.core :as r]\n    [oz.core :as oz]\n    [goog.string :as gstring]\n    [dcs.prototype-6.util :as util]\n    [dcs.prototype-6.state :as state]))\n\n(defn chart-spec-cars-worth\n      [data]\n      {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n       :width      300\n       :height     350\n       :background \"#f2dfce\"\n       :data       {:values data}\n       :transform  [{:calculate \"datum.car==1 ? '\ud83d\ude97' : ''\" :as \"emoji\"}\n                    {:window [{:op \"sum\" :field \"car\" :as \"cars\"}]\n                     :groupby [\"year\"]}]\n       :mark       {:type \"text\"\n                    :align \"center\"}\n       :encoding   {:x       {:field \"year\" :type \"temporal\"\n                              :axis {:format \"%Y\"\n                                     :labelAngle 45\n                                     :labelBound 50\n                                     }}\n                    :y       {:field \"cars\"\n                              :type \"quantitative\"\n                              :axis {:title \"equivalent number of cars\"}}\n                    :text {:field \"emoji\" :type \"nominal\"}\n                    :size {:value 15}\n                    :tooltip [{:field \"year\" :type \"temporal\" :format \"%Y\"}\n                              {:title \"equivalent number of cars\" :field \"num-of-cars\" :type \"quantitative\"}]}\n       :config {\n                :axisX {:grid false}}})\n\n\n(defn charts [co2e]\n      (let [car-co2e (->> co2e\n                          ;; calcuate the avoided CO2e in terms of car-co2e\n                          ;; 4.9 = average tonnes of CO2e per car per year (incorporates exhaust emissions, fuel supply chain, car material)\n                          (map (fn [{:keys [yyyy-MM-dd tonnes]}]\n                                   {:year (str (subs yyyy-MM-dd 0 4) \"-01-01\")\n                                    :car-co2e (/ tonnes 4.9)}))\n                          ;; roll-up to per-year\n                          (group-by :year)\n                          (map (fn [[year coll]]\n                                   {:year year\n                                    :car-co2e (->> coll\n                                                   (map :car-co2e)\n                                                   (apply +))}))\n                          ;; for a Vega emoji representation, create a record per car\n                          (map (fn [{:keys [year car-co2e]}]\n                                   (let [num-of-cars (int (Math/round car-co2e))]\n                                        (repeat num-of-cars\n                                                {:year year\n                                                 :car 1\n                                                 :num-of-cars num-of-cars}))))\n                          flatten\n                          ;; workaround a Vega rendering issue by delimiting the year range with empty valued records\n                          (cons {:year \"2011-01-01\"\n                                 :car 0\n                                 :num-of-cars 0})\n                          (cons {:year \"2020-01-01\"\n                                 :car 0\n                                 :num-of-cars 0}))]\n\n      [:div.tile.is-ancestor\n\n       [:div.tile.is-4\n        [:div.tile.is-vertical.is-parent\n\n         [:div.tile.is-child\n          [oz/vega-lite (chart-spec-cars-worth car-co2e)\n           util/vega-embed-opts]]\n         ]]\n\n       [:div.tile\n        [:div.tile.is-vertical.is-parent\n\n         [:div.tile.is-child.content\n          [:blockquote\n           [:p \"TODO:\"]\n           [:ul\n            [:li \"The graph shows the equivalent amounts of CO2e, in terms of cars\"]\n            [:li \"The calculation incorporates exhaust emissions, fuel supply chain and amortised car material for the average UK car\"]\n            ]]]]]]))\n\n(defn root []\n      [charts\n       @state/fairshare-co2e-derivation-cursor])"]}