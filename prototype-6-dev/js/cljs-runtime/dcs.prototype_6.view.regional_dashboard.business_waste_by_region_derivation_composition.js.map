{"version":3,"sources":["dcs/prototype_6/view/regional_dashboard/business_waste_by_region_derivation_composition.cljs"],"mappings":";AASE,AAAA,AAAMA,AAAYC,AAAMC,AAAQC;AAAhC,AACE,AAAMC,AAAW,AAACC,AAAM,AAAA,AAACC,AAAeH;AAAxC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACMI,AAGuGH;AAMvGI,AAAsBC,AACA,AAAA,AAAA,AAAA,AAACC,AAAwB,AAAA,AAAA,AAAA,AAAIH,AAC7B,AAAA,AAAA,AAAA,AAACG,AAAwB,AAAA,AAAA,AAAA,AAAIH,AAC7B,AAAA,AAAA,AAAA,AAACG,AAA4B,AAAA,AAAA,AAAA,AAAIH,AACjC,AAAA,AAAA,AAAA,AAAA,AAACG;AAd7B,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAiBeT,AAISE,AACbI,AACAC;;AAGf,AAAA,AAAMG,AAAOC,AAAOC,AAAgDC;AAApE,AACM,AACMC,AAAiD,AAAA,AAAAC,AAACC;AAAD,AAAS,AAACC,AAAEN,AAAO,AAAA,AAAAI;AAAaH;AAGjFM,AAAkD,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAD,AAAA,AAACE,AAAc,AAAK,AAAA,AAAAF;AACrBL;AAGvDQ,AAAmD,AAAA,AAACC,AAA4BV,AAAYK;AARlG,AAAA,AAAA,AAAA,AAWIM,AAAa,AAAA,AAACzB,AAAyBY,AAAOW,AAC9CG;;AAEV,AAAA,AAAME;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AAAA,AAAAA,AACOhB,AAAOkB,AAAqBC,AAA8DC","names":["dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition/chart-spec","title","_region","data","year-count","cljs.core/count","cljs.core/group-by","layer-normal","layer-annotations","dcs.prototype-6.annotation-mech/layer-annotations","cljs.core/assoc-in","dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition/chart","region","business-waste-by-region-derivation-composition","annotations","business-waste-by-region-derivation-composition'","p1__44782#","cljs.core.filter","cljs.core._EQ_","business-waste-by-region-derivation-composition''","p1__44783#","cljs.core.map","cljs.core.assoc","business-waste-by-region-derivation-composition'''","dcs.prototype_6.annotation_mech.apply_annotations","oz.core/vega-lite","dcs.prototype-6.util/vega-embed-opts","cljs.core/deref","dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition/root","dcs.prototype-6.state/region-cursor","dcs.prototype-6.state/business-waste-by-region-derivation-composition-cursor","dcs.prototype-6.state/annotations-derivation-cursor"],"sourcesContent":["(ns dcs.prototype-6.view.regional-dashboard.business-waste-by-region-derivation-composition\n  (:require\n    [oz.core :as oz]\n    [dcs.prototype-6.util :as util]\n    [dcs.prototype-6.annotation-mech :as anno-mech]\n    [dcs.prototype-6.state :as state]))\n\n\n\n  (defn chart-spec [title _region data]\n    (let [year-count (count (group-by :year data))\n          layer-normal {:mark {:type                 \"bar\"\n                               :cornerRadiusTopLeft  3\n                               :cornerRadiusTopRight 3}\n                        :encoding   {:x       {:field \"year\" :type \"temporal\" :timeUnit \"year\" :axis {:tickCount year-count :title \"year\"}}\n                                     :y       {:field \"tonnes\" :type \"quantitative\" :scale {:zero false} :axis {:title \"tonnes\"}}\n                                     :color   {:field \"material\" :type \"nominal\" :scale {:scheme \"tableau20\"} :legend nil #_{:orient \"bottom\" :columns 3}}\n                                     :tooltip [{:field \"material\" :type \"nominal\"}\n                                               {:field \"year\" :type \"temporal\"}\n                                               {:field \"tonnes\" :type \"quantitative\"}]}}\n          layer-annotations (-> anno-mech/layer-annotations\n                                (assoc-in [:encoding :x] (-> layer-normal :encoding :x))\n                                (assoc-in [:encoding :y] (-> layer-normal :encoding :y))\n                                (assoc-in [:encoding :color] (-> layer-normal :encoding :color))\n                                (assoc-in [:mark :dy] -30)\n                                #_(assoc-in [:mark :dx] 0))]\n      {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n       :title      title\n       :width      200\n       :height     100\n       :background \"floralwhite\"\n       :data       {:values data}\n       :layer [layer-normal\n               layer-annotations]}))\n\n\n(defn chart [region business-waste-by-region-derivation-composition annotations]\n      (let [;; filter\n            business-waste-by-region-derivation-composition' (filter #(= region (:region %)) business-waste-by-region-derivation-composition)\n\n            ;; stringify the year for Vega\n            business-waste-by-region-derivation-composition'' (map #(assoc % :year (str (:year %)))\n                                                                   business-waste-by-region-derivation-composition')\n            \n            ;; add annotation data\n            business-waste-by-region-derivation-composition''' (anno-mech/apply-annotations annotations business-waste-by-region-derivation-composition'' :business-waste-by-region-derivation-composition)]\n \n        [:div\n         [oz/vega-lite (chart-spec \"Composition\" region business-waste-by-region-derivation-composition''')\n          util/vega-embed-opts]]))\n\n(defn root []\n      [chart @state/region-cursor @state/business-waste-by-region-derivation-composition-cursor @state/annotations-derivation-cursor])"]}