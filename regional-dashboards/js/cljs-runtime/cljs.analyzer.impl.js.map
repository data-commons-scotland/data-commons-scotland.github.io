{"version":3,"sources":["cljs/analyzer/impl.cljc"],"mappings":";AAUA,AAAA,AAAA,AAAKA;AAEL,AAAA,AAAA,AAAKC;AAEL,AAAA,AAAA,AAAKC;AAGF,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAKC;AAER,AAAA,AAAA,AAAKC;AAGF,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAKC;AAER,AAAA,AAAA,AAAKC;AAGF,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAA,AAAKC;AAGL,AAAA,AAAeC,AAAWC;AAA1B,AACK,AAAA,AAAA,AAAA,AAAkBA;AAAlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAkBD,AAAAA;AAAlB;;AAAA;;;AAAA;;;AAGL,AAAA,AAAeE,AAAWF;AAA1B,AACE,AAAA,AAAA,AAAA,AAAkBA;AAAlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAkBD,AAAAA;AAAlB;;AAAA;;;AAAA;;;AAGF,AAAA,AAAeG,AAAcH;AAA7B,AACE,AAAA,AAAA,AAAA,AAAqBA;AAArB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAqBD,AAAAA;AAArB;;AAAA;;;AAAA;;;AAGF,AAAA,AAAeI,AAAWJ;AAA1B,AACE,AAAA,AAAA,AAAA,AAAkBA;AAAlB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAC,AAAA,AAAkBD,AAAAA;AAAlB;;AAAA;;;AAAA","names":["cljs.analyzer.impl/ANY_SYM","cljs.analyzer.impl/BOOLEAN_OR_SEQ","cljs.analyzer.impl/BOOLEAN_SYM","cljs.analyzer.impl/CLJ_NIL_SYM","cljs.analyzer.impl/CLJS_CORE_MACROS_SYM","cljs.analyzer.impl/CLJS_CORE_SYM","cljs.analyzer.impl/DOT_SYM","cljs.analyzer.impl/IGNORE_SYM","cljs.analyzer.impl/JS_STAR_SYM","cljs.analyzer.impl/NEW_SYM","cljs.analyzer.impl/NOT_NATIVE","cljs.analyzer.impl/NUMBER_SYM","cljs.analyzer.impl/STRING_SYM","cljs.analyzer.impl/cljs-map?","x","cljs.core/PROTOCOL_SENTINEL","cljs.analyzer.impl/cljs-seq?","cljs.analyzer.impl/cljs-vector?","cljs.analyzer.impl/cljs-set?"],"sourcesContent":[";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer.impl)\n\n(def ANY_SYM 'any)\n\n(def BOOLEAN_OR_SEQ '#{boolean seq})\n\n(def BOOLEAN_SYM 'boolean)\n\n#?(:cljs\n   (def CLJ_NIL_SYM 'clj-nil))\n\n#?(:cljs\n   (def CLJS_CORE_MACROS_SYM 'cljs.core$macros))\n\n#?(:cljs\n   (def CLJS_CORE_SYM 'cljs.core))\n\n#?(:cljs\n   (def DOT_SYM '.))\n\n(def IGNORE_SYM 'ignore)\n\n#?(:cljs\n   (def JS_STAR_SYM 'js*))\n\n#?(:cljs\n   (def NEW_SYM 'new))\n\n(def NOT_NATIVE '#{clj not-native})\n\n#?(:cljs\n   (def NUMBER_SYM 'number))\n\n#?(:cljs\n   (def STRING_SYM 'string))\n\n#?(:cljs\n   (defn ^boolean cljs-map? [x]\n        (implements? IMap x)))\n\n#?(:cljs\n   (defn ^boolean cljs-seq? [x]\n     (implements? ISeq x)))\n\n#?(:cljs\n   (defn ^boolean cljs-vector? [x]\n     (implements? IVector x)))\n\n#?(:cljs\n   (defn ^boolean cljs-set? [x]\n     (implements? ISet x)))\n"]}