{"version":3,"sources":["dcs/prototype_6/view/stirling_bin_collection/derivation_percent_recycled.cljs"],"mappings":";AAQA,AAAA,AAAMA,AAAYC,AAAMC;AAAxB,AACM,AAAMC,AAAc,AAACC,AAAM,AAACC,AAAS,AAAA,AAAA,AAACC,AAAqoBC;;AAgBrD,AAAA,AAAMI,AAAOC,AAAoDC;AAAjE,AACM,AACMC,AAAa,AAAA,AAAKF,AACA,AAAA,AAACG,AACD,AAACC,AAAMC;AAIzBC,AAGkD,AAAA,AAAAK,AAACR;AAAD,AAAM,AAAAQ,AAAA,AAACC,AAAgB,AAAA,AAAK,AAAA,AAAAD;AAD5B,AAAA,AAAAF,AAACD;AAAD,AAAS,AAAA,AAAA,AAAA,AAACE,AAAmC,AAAA,AAAAD;AAD7C,AAAA,AAAAF,AAACC;AAAD,AAAS,AAAI,AAAA,AAAAD,AAAUL;AADvBD;AAMlDY,AAA8C,AACD,AAACV,AAAI,AAAAW,AAOL8B;AAPK,AAAA,AAAA7B,AAAAD;AAAAC,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAA,AAAA,AAAA,AAAAC,AAAA,AAAAD,AAAA,AAAA,AAAA,AAAA,AAAAX,AAAAa,AAAAF,AAAAA;AAAA,AAAAG,AAAAH,AAAA,AAAaI;AAAb,AAAAD,AAAAH,AAAA,AAAoBK;AAApB,AAAAF,AAAAH,AAAA,AAAyBM;AAAzB,AACI,AAAMC,AAAqBD;AAA3B,AACK,AAAAE,AAAA,AAAAC;AAAA,AAAA,AAAAC,AAAA,AAAA;AAAA,AAAA,AAAAD,AAAAA;;AAAA,AAAA,AAAAE,AAAA,AAAAC,AAAAH;AAAA,AAAA,AAAAE;AAAA,AAAA,AAAAF,AAAAE;AAAA,AAAA,AAAA,AAAAE,AAAAJ;AAAA,AAAAK,AA84EpB,AAAA4B,AAAAjC;AA94EoBM,AAAA,AAAAlC,AAAAiC;AAAAE,AAAA,AAAAC,AAAAF;AAAA,AAAA,AAAA,AAAA,AAAAG,AAAA;;AAAA,AAAA,AAAA,AAAAA,AAAAH;AAAA,AAAA,AAAAI,AAAAL,AAAAI,AAAMU;AAAN,AAAA,AAAA,AAAAR,AAAAJ,AAAA,AAAA,AAAA,AAAA,AAAA,AACeZ,AACAC,AACAuB,AACGrB;;AAJlB,AAAA,AAAAW,AAAA;;;;AAAA;;;;;AAAA,AAAAG,AAAA,AAAAC,AAAAN,AAAA,AAAAO,AAAA,AAAAC,AAAAf;;AAAA,AAAAY,AAAA,AAAAC,AAAAN,AAAA;;;AAAA,AAAA,AAAAS,AAAAhB,AAAMmB;AAAN,AAAA,AAAAF,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAAH,AAAA,AAAAI,AAAAlB,AACeL,AACAC,AACAuB,AACGrB;;;AAJlB;;;;AAAA,AAAA;;AAAA,AAAA,AAAAC,AAAA,AAAA,AAAA,AAAA,AAAA;AAHRjB;AAWnDuC,AAAqD,AAAA,AAAAC,AAAC3C;AAAD,AAAM,AAAA2C,AAAA,AAAA,AAAClC;AACRZ;AAGpD+C,AAA6B,AAACC,AAAOH,AACNhC;AAG/BoC,AAA8B,AAAA,AAAAC,AAAC/C;AAAD,AAAM,AAAA+C,AAAA,AAACtC,AAAc,AAACuC,AAAc,AAAA,AAAAD,AAAU,AAAA,AAAAA;AAC9CH;AAjCpC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAoCOK,AAAa,AAAA,AAAC5D,AAAgDyD;;AAG3E,AAAA,AAAMK;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AACOtD,AACCwD,AACAC","names":["dcs.prototype-6.view.stirling-bin-collection.derivation-percent-recycled/chart-spec","title","data","quarter-count","cljs.core/count","cljs.core/group-by","cljs.core.juxt","dcs.prototype-6.view.stirling-bin-collection.derivation-percent-recycled/chart","stirling-bin-collection-derivation-percent-recycled","household-waste-derivation-percent-recycled","ctx-min-year","cljs.core.map","cljs.core.apply","cljs.core/min","household-waste-derivation-percent-recycled'","p1__29572#","cljs.core.filter","p1__29573#","cljs.core/contains?","p1__29574#","cljs.core.assoc","household-waste-derivation-percent-recycled''","p__29577","map__29578","cljs.core/PROTOCOL_SENTINEL","cljs.core/hash-map","cljs.core.get","region","year","percentage","quarterly-percentage","iter__4529__auto__","s__29581","cljs.core/LazySeq","temp__5735__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__4527__auto__","size__4528__auto__","b__29583","cljs.core/chunk-buffer","i__29582","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__29580","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","quarter","cljs.core/flatten","stirling-bin-collection-derivation-percent-recycled'","p1__29575#","derivation-percent-recycled'","cljs.core.concat","derivation-percent-recycled''","p1__29576#","dcs.prototype-6.util/date-str","oz.core/vega-lite","cljs.core/deref","dcs.prototype-6.view.stirling-bin-collection.derivation-percent-recycled/root","dcs.prototype-6.state/stirling-bin-collection-derivation-percent-recycled-cursor","dcs.prototype-6.state/household-waste-derivation-percent-recycled-cursor","cljs.core/chunk-first"],"sourcesContent":["(ns dcs.prototype-6.view.stirling-bin-collection.derivation-percent-recycled\n  (:require\n    [reagent.core :as r]\n    [oz.core :as oz]\n    [dcs.prototype-6.util :as util]\n    [dcs.prototype-6.state :as state]))\n\n\n(defn chart-spec [title data]\n      (let [quarter-count (count (group-by (juxt :year :quarter) data))]\n           {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n            ;;:title      title\n            :width      250\n            :height     100\n            :background \"floralwhite\"\n            :data       {:values data}\n            :mark       {:type \"line\" :point {:filled false :fill \"floralwhite\"}}\n            :selection  {:my {:type   \"multi\"\n                              :fields [\"region\"]\n                              :bind   \"legend\"}}\n            :encoding   {:x       {:field \"date\" :type \"temporal\"\n                                   :timeUnit \"yearquarter\"\n                                   :axis {:tickCount quarter-count\n                                          :title      \"year quarter\"\n                                          :labelAngle 60\n                                          :labelBound 40}}\n                         :y       {:field \"percentage\" :type \"quantitative\"\n                                   #_:scale #_{:zero false}}\n                         :color   {:field \"region\" :type \"nominal\"\n                                   :scale {:domain [\"Scotland (recycled overall)\" \"Stirling (recycled overall)\" \"Stirling (recycling bin collection)\"]\n                                           :range [\"#bcd6e9\" \"#fedfc4\" \"#BF5748\"]}\n                                   :axis {:title \"category\"}}\n                         :opacity {:condition {:selection \"my\" :value 1}\n                                   :value     0.2}\n                         :tooltip [{:field \"region\" :type \"nominal\" :title \"category\"}\n                                   {:field \"date\" :type \"temporal\"}\n                                   {:field \"percentage\" :type \"quantitative\"}]}}))\n\n(defn chart [stirling-bin-collection-derivation-percent-recycled household-waste-derivation-percent-recycled]\n      (let [;; min year to be used to filter the context data is 1 year less than the min year of the Stirling bin collection data\n            ctx-min-year (->> stirling-bin-collection-derivation-percent-recycled\n                              (map :year)\n                              (apply min)\n                              dec)\n\n            ;; filter for Scotland and Stirling in the more general household waste data\n            household-waste-derivation-percent-recycled' (->> household-waste-derivation-percent-recycled\n                                                              (filter #(>= (:year %) ctx-min-year)) ;; we only want a specific range of years\n                                                              (filter #(contains? #{\"Scotland\" \"Stirling\"} (:region %))) ;; we only want Scotland and Stirling\n                                                              (map #(assoc % :region (str (:region %) \" (recycled overall)\")))) ;; re-label\n\n            ;; estimate the quarterly figures by simply copying the yearly percentage\n            household-waste-derivation-percent-recycled'' (->> household-waste-derivation-percent-recycled'\n                                                         (map (fn [{:keys [region year percentage]}]\n                                                                  (let [quarterly-percentage percentage]\n                                                                       (for [quarter [1 2 3 4]]\n                                                                            {:region  region\n                                                                             :year    year\n                                                                             :quarter quarter\n                                                                             :percentage quarterly-percentage}))))\n                                                         flatten)\n\n            ;; add \" (bins)\" to the label for Stirling\n            stirling-bin-collection-derivation-percent-recycled' (map #(assoc % :region \"Stirling (recycling bin collection)\")\n                                                                stirling-bin-collection-derivation-percent-recycled)\n\n            ;; combine Stirling bin collection data with that for the more general household waste of Stirling and Scotland\n            derivation-percent-recycled' (concat stirling-bin-collection-derivation-percent-recycled'\n                                           household-waste-derivation-percent-recycled'')\n\n            ;; stringify the year for Vega\n            derivation-percent-recycled'' (map #(assoc % :date (util/date-str (:year %) (:quarter %)))\n                                          derivation-percent-recycled')]\n\n           [:div\n            [oz/vega-lite (chart-spec \"% for the recycling bin collection\" derivation-percent-recycled'')\n             {:actions false}]]))\n\n(defn root []\n      [chart\n       @state/stirling-bin-collection-derivation-percent-recycled-cursor\n       @state/household-waste-derivation-percent-recycled-cursor])"]}