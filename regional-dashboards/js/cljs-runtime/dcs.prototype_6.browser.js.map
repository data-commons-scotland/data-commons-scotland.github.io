{"version":3,"sources":["dcs/prototype_6/browser.cljs"],"mappings":";AAYA,AAAA,AAAMA;AAAN,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAKwB,AAAA,AAACC,AACD,AAAA,AAACA;;AAEzB,AAAA,AAAMC;AAAN,AAAA,AAAA,AAAA,AAGQC,AACD,AAAA,AAAAC,AAAMC,AAAOC;AACPC,AAAE,AAAA,AAACC,AAAwBH;AAC3BI,AAAK,AAAAC,AAAI,AAAA,AAAO,AAAA,AAAOL;AAAlB,AAAA,AAAAK;AAAAA;;AACIC;;;AAHf,AAIK,AAAA,AAACH,AAAyBC;;AAJ/B,AAAA,AAAAL,AAKMK,AAAMH;AATnB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAaA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKM,AAGQD,AAIAE,AAGAb,AAGAc;AAGb,AAAA,AAAuBC;AAAvB,AAEM,AAAA,AAACP;;AACD,AAACQ,AACC,AAAA,AAAA,AAAA,AAAA,AAACC,AAAUL,AAAyBM,AACpC,AAAKC;AAAL,AAAQ,AAACC,AAAOd,AAAkBa;AAFpC,AAAA,AAAA;;AAIA,AAAA,AAACX;;AACD,AAAA,AAACa,AAAUnB,AAAM,AAAA,AAAiBoB;;AAExC,AAAA,AAAeC;AAAf,AAKM,AAACC;;AACD,AAACT;;;AAGP,AAAA,AAAwBU;AAAxB,AAEM,AAAA,AAACjB","names":["dcs.prototype-6.browser/view1","reitit.frontend.easy.href","dcs.prototype-6.browser/page","dcs.prototype-6.ui-nav/navbar","cljs.core/deref","route","dcs.prototype-6.state/route-match","_","js/console.log","view","or__4126__auto__","dcs.prototype-6.view.home/create","dcs.prototype-6.browser/routes","dcs.prototype-6.ui-root/app","dcs.prototype-6.view.todo/create","dcs.prototype-6.browser/start","reitit.frontend.easy/start!","reitit.frontend.router","reitit.coercion.spec/coercion","m","cljs.core/reset!","reagent.core.render","js/document","dcs.prototype-6.browser/init","dcs.prototype-6.state/load-data","dcs.prototype-6.browser/stop"],"sourcesContent":["(ns dcs.prototype-6.browser\n  (:require [reagent.core :as r]\n            [reitit.frontend :as rf]\n            [reitit.coercion.spec :as rss]\n            [reitit.frontend.easy :as rfe]\n            [dcs.prototype-6.state :as state]\n            [dcs.prototype-6.ui-nav :as ui-nav]\n            [dcs.prototype-6.ui-root :as ui-root]\n            [dcs.prototype-6.view.home :as home-view]\n            [dcs.prototype-6.view.todo :as todo-view]))\n\n\n(defn view1\n      []\n      [:div\n       [:h1 \"VIEW - 1\"]\n       [:ul\n        [:li [:a {:href (rfe/href ::home-view)} \"Home page\"]]\n        [:li [:a {:href (rfe/href ::dashboard-page)} \"Dashboard page\"]]]])\n\n(defn page\n      []\n      [:div\n       [ui-nav/navbar]\n       (let [route @state/route-match\n             _ (js/console.log \"route=\" route)\n             view (or (:view (:data route))\n                      home-view/create)]\n            (js/console.log \"view = \" view)\n            [view @state/route-match])\n       [:footer.footer\n        [:p \"Built by the \" [:strong \"Data Commons Scotland\"] \" project.\"]]])\n\n(def routes\n  [[\"/\"\n    {:name ::home-view\n     :view   home-view/create}]\n   [\"/dashboard\"\n    {:name ::dashboard-page\n     ;;:parameters {:path {:region string?}}\n     :view   ui-root/app}]\n   [\"/route1\"\n    {:name ::route1-page\n     :view   view1}]\n   [\"/todo\"\n    {:name ::todo-view\n     :view   todo-view/create}]])\n\n;; called by init and after code reloading finishes\n(defn ^:dev/after-load start\n      []\n      (js/console.log \"Starting router\")\n      (rfe/start!\n        (rf/router routes {:data {:coercion rss/coercion}})\n        (fn [m] (reset! state/route-match m))\n        {:use-fragment true})  ;; So URLs looking like  base-path/#/other/paths\n      (js/console.log \"Starting render\")\n      (r/render [page] (.getElementById js/document \"app\")))\n\n(defn ^:export init\n      []\n      ;; init is called ONCE when the page loads\n      ;; this is called in the index.html and must be exported\n      ;; so it is available even in :advanced release builds\n      (state/load-data)\n      (start))\n\n;; this is called before any code is reloaded\n(defn ^:dev/before-load stop\n      []\n      (js/console.log \"stop\"))"]}