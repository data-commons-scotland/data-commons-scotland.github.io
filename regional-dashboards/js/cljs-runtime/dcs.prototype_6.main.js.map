{"version":3,"sources":["dcs/prototype_6/main.cljs"],"mappings":";AAWA,AAAA,AAAMA;AAAN,AAAA,AAAA,AAAA,AAGQC,AACD,AAAA,AAAAC,AAAMC,AAAOC;AAAb,AACK,AAAA,AAACC,AAAwBF;;AACzB,AAAMG,AAAK,AAAAC,AAAI,AAAA,AAAA,AAAA,AAAIJ;AAAR,AAAA,AAAAI;AAAAA;;AACIC;;;AADf,AAAA,AAAA,AAAAN,AAEMI,AAAMF;AARxB,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA;;AAYA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAKK,AAGMD,AAGAE,AAGAC,AAGAA;AAGX,AAAA,AAAuBC;AAAvB,AAEM,AAAA,AAACP;;AACD,AAACQ,AACC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAACC,AAAUL,AACuBM,AAElC,AAAKC;AAAL,AAAQ,AAACC,AAAOb,AAAkBY;AAJpC,AAAA,AAAA;;AAMA,AAAA,AAACX;;AACD,AAAA,AAACa,AAAUlB,AAAM,AAAA,AAAiBmB;;AAExC,AAAA,AAAeC;AAAf,AAKM,AAACC;;AACD,AAACT;;;AAGP,AAAA,AAAwBU;AAAxB,AAEM,AAAA,AAACjB","names":["dcs.prototype-6.main/page","dcs.prototype-6.navbar/root","cljs.core/deref","route","dcs.prototype-6.state/route-match","js/console.log","view","or__4126__auto__","dcs.prototype-6.view.home/root","dcs.prototype-6.main/routes","dcs.prototype-6.view.todo/root","dcs.prototype-6.view.regional-dashboard.main/root","dcs.prototype-6.main/start","reitit.frontend.easy/start!","reitit.frontend.router","reitit.coercion.spec/coercion","m","cljs.core/reset!","reagent.core.render","js/document","dcs.prototype-6.main/init","dcs.prototype-6.state/load-data","dcs.prototype-6.main/stop"],"sourcesContent":["(ns dcs.prototype-6.main\n  (:require [reagent.core :as r]\n            [reitit.frontend :as rf]\n            [reitit.coercion.spec :as rss]\n            [reitit.frontend.easy :as rfe]\n            [dcs.prototype-6.state :as state]\n            [dcs.prototype-6.navbar :as navbar]\n            [dcs.prototype-6.view.home :as home-view]\n            [dcs.prototype-6.view.regional-dashboard.main :as regional-dashboard-view]\n            [dcs.prototype-6.view.todo :as todo-view]))\n\n(defn page\n      []\n      [:div\n       [navbar/root]\n       (let [route @state/route-match]\n            (js/console.log \"route=\" route)\n            (let [view (or (-> route :data :view)\n                           home-view/root)]\n                 [view @state/route-match]))\n       [:footer.footer\n        [:p \"Built by the \" [:strong \"Data Commons Scotland\"] \" project.\"]]])\n\n(def routes\n  [[\"/\"\n    {:name ::home-view\n     :view home-view/root}]\n   [\"/todo\"\n    {:name ::todo-view\n     :view todo-view/root}]\n   [\"/regional-dashboard\"\n    {:name ::dashboard-view\n     :view regional-dashboard-view/root}]\n   [\"*path\"\n    {:name ::catch-all\n     :view regional-dashboard-view/root}]])\n\n;; called by init and after code reloading finishes\n(defn ^:dev/after-load start\n      []\n      (js/console.log \"Starting router\")\n      (rfe/start!\n        (rf/router routes\n                   {:data      {:coercion rss/coercion}\n                    :conflicts nil})\n        (fn [m] (reset! state/route-match m))\n        {:use-fragment true})                               ;; So URLs looking like  base-path/#/other/paths\n      (js/console.log \"Starting render\")\n      (r/render [page] (.getElementById js/document \"app\")))\n\n(defn ^:export init\n      []\n      ;; init is called ONCE when the page loads\n      ;; this is called in the index.html and must be exported\n      ;; so it is available even in :advanced release builds\n      (state/load-data)\n      (start))\n\n;; this is called before any code is reloaded\n(defn ^:dev/before-load stop\n      []\n      (js/console.log \"stop\"))"]}