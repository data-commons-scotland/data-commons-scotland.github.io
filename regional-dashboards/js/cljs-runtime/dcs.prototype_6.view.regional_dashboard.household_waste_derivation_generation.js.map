{"version":3,"sources":["dcs/prototype_6/view/regional_dashboard/household_waste_derivation_generation.cljs"],"mappings":";AAOA,AAAA,AAAMA,AAAYC,AAAMC,AAAOC;AAA/B,AACM,AAAMC,AAAW,AAACC,AAAM,AAAA,AAACC,AAAeH;AAAxC,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAEkBF,AAISE,AAKoEC,AAENF;;AAO/F,AAAA,AAAMK,AAAOL,AAAOM;AAApB,AACM,AACMC,AAAuC,AAAA,AAAAC,AAACC;AAAD,AAAS,AAAA,AAAA,AAACC,AAAuBV,AAAQ,AAAA,AAAAQ;AAAaF;AAG7FK,AAAwC,AAAA,AAAAC,AAACC;AAAD,AAAM,AAAAD,AAAA,AAACE,AAAc,AAAK,AAAA,AAAAF;AACrBL;AALnD,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAOOQ,AAAa,AAAA,AAACjB,AAAwBE,AAAOW;;AAG1D,AAAA,AAAMM;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AACOX,AAAOa,AAAqBC","names":["dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation/chart-spec","title","region","data","year-count","cljs.core/count","cljs.core/group-by","dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation/chart","household-waste-derivation-generation","household-waste-derivation-generation'","p1__30577#","cljs.core.filter","cljs.core/contains?","household-waste-derivation-generation''","p1__30578#","cljs.core.map","cljs.core.assoc","oz.core/vega-lite","cljs.core/deref","dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation/root","dcs.prototype-6.state/region-holder","dcs.prototype-6.state/household-waste-derivation-generation-holder"],"sourcesContent":["(ns dcs.prototype-6.view.regional-dashboard.household-waste-derivation-generation\n  (:require\n    [reagent.core :as r]\n    [oz.core :as oz]\n    [dcs.prototype-6.state :as state]))\n\n\n(defn chart-spec [title region data]\n      (let [year-count (count (group-by :year data))]\n           {:schema     \"https://vega.github.io/schema/vega/v5.json\"\n            :title      title\n            :width      200\n            :height     100\n            :background \"floralwhite\"\n            :data       {:values data}\n            :mark       {:type \"line\" :point false #_{:filled false :fill \"floralwhite\" }}\n            :selection  {:my {:type   \"multi\"\n                              :fields [\"region\"]\n                              :bind   \"legend\"}}\n            :encoding   {:x       {:field \"year\" :type \"temporal\" :timeUnit \"year\" :axis {:tickCount year-count :title \"year\"}}\n                         :y       {:field \"tonnes\" :type \"quantitative\" :scale {:zero false} :axis {:title \"tonnes\"}}\n                         :color   {:field \"region\" :type \"nominal\" :scale {:domain [\"Scotland\" region] :range [\"#1f77b4\" \"#fdae6b\"]}}\n                         :opacity {:condition {:selection \"my\" :value 1}\n                                   :value     0.2}\n                         :tooltip [{:field \"region\" :type \"nominal\"}\n                                   {:field \"year\" :type \"temporal\"}\n                                   {:field \"tonnes\" :type \"quantitative\"}]}}))\n\n(defn chart [region household-waste-derivation-generation]\n      (let [;; filter\n            household-waste-derivation-generation' (filter #(contains? #{\"Scotland\" region} (:region %)) household-waste-derivation-generation)\n\n            ;; stringify the year for Vega\n            household-waste-derivation-generation'' (map #(assoc % :year (str (:year %)))\n                                                         household-waste-derivation-generation')]\n           [:div\n            [oz/vega-lite (chart-spec \"Generation\" region household-waste-derivation-generation'')\n             {:actions false}]]))\n\n(defn root []\n      [chart @state/region-holder @state/household-waste-derivation-generation-holder])"]}