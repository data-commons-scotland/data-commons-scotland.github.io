{
"version":3,
"file":"module$node_modules$react_leaflet$cjs$SVGOverlay.js",
"lineCount":4,
"mappings":"AAAAA,cAAA,CAAA,gDAAA,CAAqE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,UAAR,CAAqBF,OAAQG,CAAAA,aAA7B,CAA6CH,OAAQI,CAAAA,oBAArD,CAA4E,IAAK,EAE7EC,OAAAA,CAAQP,OAAA,CAAQ,mDAAR,CAEZ,KAAIQ,SAAWR,OAAA,CAAQ,8CAAR,CAAf,CAEIS,OAAST,OAAA,CAAQ,iCAAR,CAFb,CAIIU,UAAYV,OAAA,CAAQ,qCAAR,CAEVM,QAAAA,CAAuB,CAAC,CAAA,CAAGC,MAAMI,CAAAA,iBAAV,EAA6BC,QAAyB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CAC5F,IAAA;AAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAIFD,KAJE,CAAA,CACJE,WAGEF,KAHF,CAAA,UACAG,MAAAA,CAEEH,KAFF,CAAA,MACA,4BAAA,EAAA,OAAA,2BAAA,CAAA,UAAA,CAAA,OAAA,2BAAA,CAAA,MAAA,CAAA,2BAAA,CAEF,KAAMI,UAAYC,QAASC,CAAAA,eAAT,CAAyB,4BAAzB,CAAuD,KAAvD,CAClBF,UAAUG,CAAAA,YAAV,CAAuB,OAAvB,CAAgC,4BAAhC,CAEkB,KAAlB,EAAIL,UAAJ,EACEM,MAAOC,CAAAA,IAAP,CAAYP,UAAZ,CAAwBQ,CAAAA,OAAxB,CAAgC,QAAA,CAAAC,IAAA,CAAQ,CACtCP,SAAUG,CAAAA,YAAV,CAAuBI,IAAvB,CAA6BT,UAAA,CAAWS,IAAX,CAA7B,CADsC,CAAxC,CAKF,OAAO,CACLC,SAAU,IAAIjB,QAASJ,CAAAA,UAAb,CAAwBa,SAAxB;AAAmCD,KAAnC,CAA2CU,2BAA3C,CADL,CAELT,UAAAA,SAFK,CAGLH,QAAAA,OAHK,CAf2F,CAAvE,CAoB1BP,MAAMoB,CAAAA,kBApBoB,CAqB7BzB,QAAQI,CAAAA,oBAAR,CAA+BA,OAC/B,KAAMD,cAAgB,CAAC,CAAA,CAAGE,MAAMqB,CAAAA,eAAV,EAA2BtB,OAA3B,CACtBJ,QAAQG,CAAAA,aAAR,CAAwBA,aAclBD,QAAAA,CAA0B,CAAC,CAAA,CAAGK,MAAOoB,CAAAA,UAAX,EAZhCC,QAA4B,CAAC,2BAAD,CAGzBC,GAHyB,CAGpB,CAHqB,IAAA,4BAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,2BAAA,CAC3BC,4BAAAA,CAD2B,2BAC3B,CAAA,QACA,4BAAA,EAAA,OAAA,2BAAA,CAAA,QAAA;AAAA,2BAAA,CAEM,4BAAA,CAGF3B,aAAA,CAAcqB,2BAAd,CAAuBO,CAAAA,OAFzB,KAAAR,SAAA,2BAAA,CAAA,QACAR,4BAAAA,CAAA,2BAAA,CAAA,SAEF,EAAC,CAAA,CAAGR,MAAOyB,CAAAA,mBAAX,EAAgCH,GAAhC,CAAqC,QAAA,EAAMN,CAAAA,MAAAA,SAAAA,CAA3C,CACA,OAAoB,KAAb,EAAAR,2BAAA,EAAiC,IAAjC,EAAqBe,2BAArB,CAAwC,IAAxC,CAA4D,CAAC,CAAA,CAAGtB,SAAUyB,CAAAA,YAAd,EAA4BH,2BAA5B,CAAsCf,2BAAtC,CAN7D,CASwB,CAChCf,QAAQE,CAAAA,UAAR,CAAqBA,OApDwF;",
"sources":["node_modules/react-leaflet/cjs/SVGOverlay.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_leaflet$cjs$SVGOverlay\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.SVGOverlay = exports.useSVGOverlay = exports.useSVGOverlayElement = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\");\n\nconst useSVGOverlayElement = (0, _core.createElementHook)(function createSVGOverlay(props, context) {\n  const {\n    attributes,\n    bounds,\n    ...options\n  } = props;\n  const container = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  container.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n  if (attributes != null) {\n    Object.keys(attributes).forEach(name => {\n      container.setAttribute(name, attributes[name]);\n    });\n  }\n\n  return {\n    instance: new _leaflet.SVGOverlay(container, bounds, options),\n    container,\n    context\n  };\n}, _core.updateMediaOverlay);\nexports.useSVGOverlayElement = useSVGOverlayElement;\nconst useSVGOverlay = (0, _core.createLayerHook)(useSVGOverlayElement);\nexports.useSVGOverlay = useSVGOverlay;\n\nfunction SVGOverlayComponent({\n  children,\n  ...options\n}, ref) {\n  const {\n    instance,\n    container\n  } = useSVGOverlay(options).current;\n  (0, _react.useImperativeHandle)(ref, () => instance);\n  return container == null || children == null ? null : /*#__PURE__*/(0, _reactDom.createPortal)(children, container);\n}\n\nconst SVGOverlay = /*#__PURE__*/(0, _react.forwardRef)(SVGOverlayComponent);\nexports.SVGOverlay = SVGOverlay;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","SVGOverlay","useSVGOverlay","useSVGOverlayElement","_core","_leaflet","_react","_reactDom","createElementHook","createSVGOverlay","props","context","attributes","bounds","container","document","createElementNS","setAttribute","Object","keys","forEach","name","instance","options","updateMediaOverlay","createLayerHook","forwardRef","SVGOverlayComponent","ref","children","current","useImperativeHandle","createPortal"]
}
