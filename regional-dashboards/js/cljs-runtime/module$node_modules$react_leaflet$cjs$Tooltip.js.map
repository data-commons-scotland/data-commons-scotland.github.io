{
"version":3,
"file":"module$node_modules$react_leaflet$cjs$Tooltip.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,6CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG1GA,OAAQC,CAAAA,UAAR,CAAqB,CAAA,CACrBD,QAAQE,CAAAA,OAAR,CAAkB,IAAK,EAEnBC,OAAAA,CAAQL,OAAA,CAAQ,mDAAR,CAEZ,KAAIM,SAAWN,OAAA,CAAQ,8CAAR,CAAf,CAEIO,OAASP,OAAA,CAAQ,iCAAR,CAEPI,QAAAA,CAAU,CAAC,CAAA,CAAGC,MAAMG,CAAAA,sBAAV,EAAkCC,QAAsB,CAACC,KAAD,CAAQC,OAAR,CAAiB,CACvF,MAAO,CACLC,SAAU,IAAIN,QAASF,CAAAA,OAAb,CAAqBM,KAArB,CAA4BC,OAAQE,CAAAA,gBAApC,CADL,CAELF,QAAAA,OAFK,CADgF,CAAzE,CAKbG,QAA4B,CAACC,OAAD;AAAUJ,OAAV,CAAmBD,KAAnB,CAA0BM,OAA1B,CAAmC,CAE9D,IAAAC,QAEEP,KAFF,CAAA,OAAA,CACAQ,OACER,KADF,CAAA,MAEF,EAAC,CAAA,CAAGH,MAAOY,CAAAA,SAAX,EAAsBC,QAAmB,EAAG,CAC1C,IAAMC,UAAYV,OAAQE,CAAAA,gBAE1B,IAAiB,IAAjB,EAAIQ,SAAJ,CAAA,CAKE,IAAAT,SACEG,OADF,CAAA,QAAA,CAGIO,cAAgBA,QAAA,CAAAC,KAAA,CAAS,CACzBA,KAAMC,CAAAA,OAAV,GAAsBZ,QAAtB,GACEA,QAASa,CAAAA,MAAT,EAEA,CADAT,OAAA,CAAQ,CAAA,CAAR,CACA,CAAU,IAAV,EAAAE,MAAA,CAAiB,IAAK,EAAtB,CAA0BA,MAAA,EAH5B,CAD6B,CAH7B,CAWIQ,eAAiBA,QAAA,CAAAH,KAAA,CAAS,CAC1BA,KAAMC,CAAAA,OAAV,GAAsBZ,QAAtB,GACEI,OAAA,CAAQ,CAAA,CAAR,CACA,CAAW,IAAX,EAAAC,OAAA,CAAkB,IAAK,EAAvB,CAA2BA,OAAA,EAF7B,CAD8B,CAOhCI,UAAUM,CAAAA,EAAV,CAAa,CACXC,YAAaN,aADF,CAEXO,aAAcH,cAFH,CAAb,CAIAL,UAAUS,CAAAA,WAAV,CAAsBlB,QAAtB,CACA;MAAOmB,SAAsB,EAAG,CAC9BV,SAAUW,CAAAA,GAAV,CAAc,CACZJ,YAAaN,aADD,CAEZO,aAAcH,cAFF,CAAd,CAIAL,UAAUY,CAAAA,aAAV,EAL8B,CA5BhC,CAH0C,CAA5C,CAsCG,CAAClB,OAAD,CAAUJ,OAAV,CAAmBK,OAAnB,CAA4BC,OAA5B,CAAqCC,MAArC,CAtCH,CALgE,CALlD,CAkDhBhB,QAAQE,CAAAA,OAAR,CAAkBA,OA9DwF;",
"sources":["node_modules/react-leaflet/cjs/Tooltip.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$react_leaflet$cjs$Tooltip\"] = function(global,require,module,exports) {\n\"use strict\";\n\nexports.__esModule = true;\nexports.Tooltip = void 0;\n\nvar _core = require(\"@react-leaflet/core\");\n\nvar _leaflet = require(\"leaflet\");\n\nvar _react = require(\"react\");\n\nconst Tooltip = (0, _core.createOverlayComponent)(function createTooltip(props, context) {\n  return {\n    instance: new _leaflet.Tooltip(props, context.overlayContainer),\n    context\n  };\n}, function useTooltipLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen\n  } = props;\n  (0, _react.useEffect)(function addTooltip() {\n    const container = context.overlayContainer;\n\n    if (container == null) {\n      return;\n    }\n\n    const {\n      instance\n    } = element;\n\n    const onTooltipOpen = event => {\n      if (event.tooltip === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    };\n\n    const onTooltipClose = event => {\n      if (event.tooltip === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    };\n\n    container.on({\n      tooltipopen: onTooltipOpen,\n      tooltipclose: onTooltipClose\n    });\n    container.bindTooltip(instance);\n    return function removeTooltip() {\n      container.off({\n        tooltipopen: onTooltipOpen,\n        tooltipclose: onTooltipClose\n      });\n      container.unbindTooltip();\n    };\n  }, [element, context, setOpen, onClose, onOpen]);\n});\nexports.Tooltip = Tooltip;\n};"],
"names":["shadow$provide","global","require","module","exports","__esModule","Tooltip","_core","_leaflet","_react","createOverlayComponent","createTooltip","props","context","instance","overlayContainer","useTooltipLifecycle","element","setOpen","onClose","onOpen","useEffect","addTooltip","container","onTooltipOpen","event","tooltip","update","onTooltipClose","on","tooltipopen","tooltipclose","bindTooltip","removeTooltip","off","unbindTooltip"]
}
