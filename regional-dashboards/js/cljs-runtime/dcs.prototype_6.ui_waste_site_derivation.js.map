{"version":3,"sources":["dcs/prototype_6/ui_waste_site_derivation.cljs"],"mappings":";AAKA,AAAA,AAAMA,AAAKC,AACAC;AADX,AAGM,AAAMC,AAAE,AACK,AAAA,AAAAC,AAACC,AACDE;AADA,AAAS,AAACD,AAAEL,AAAO,AAAA,AAAAG;AADnBF;AAAb,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AASuB,AAAA,AAAYC,AAGZ,AAAA,AAAgBA;;AAG7C,AAAA,AAAMM;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AACOR,AACCU,AACAC","names":["dcs.prototype-6.ui-waste-site-derivation/ele","region","waste-site-derivation","m","p1__27505#","cljs.core.filter","cljs.core._EQ_","cljs.core/first","cljs.core/deref","dcs.prototype-6.ui-waste-site-derivation/create","dcs.prototype-6.state/region-holder","dcs.prototype-6.state/waste-site-derivation-holder"],"sourcesContent":["(ns dcs.prototype-6.ui-waste-site-derivation\n  (:require [clojure.string :as str]\n            [dcs.prototype-6.state :as state]))\n\n\n(defn ele [region\n           waste-site-derivation]\n\n      (let [m (->> waste-site-derivation\n                   (filter #(= region (:region %)))\n                   first)]\n\n           [:div\n            [:table.positions\n             [:tbody\n              [:tr\n               [:td \"Sites accepting household waste\"]\n               [:td.position (:household m)]]\n              [:tr\n               [:td \"Other waste sites\"]\n               [:td.position (:non-household m)]]]]]))\n\n\n(defn create []\n      [ele\n       @state/region-holder\n       @state/waste-site-derivation-holder])"]}