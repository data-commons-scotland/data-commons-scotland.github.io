{"version":3,"sources":["dcs/prototype_6/ui_region_position.cljs"],"mappings":";AAKA,AAAA,AAAMA,AAAQC;AAAd,AACM,AAAMC,AAAE,AAAKD;AAAb,AACK,AACE,AAAA,AAACE,AAAeD;AADlB;;AAAA,AAEE,AAAA,AAACC,AAAeD;AAFlB;;AAAA,AAGE,AAAA,AAACC,AAAeD;AAHlB;;AAAA,AAIE,AAAA,AAACC,AAAeD;AAJlB;;AAAA,AAKE,AAAA,AAACC,AAAeD;AALlB;;AAAA,AAAA;;;;;;;;AASX,AAAA,AAAME,AAAKC,AACAC,AACAC,AACAC;AAHX,AAKM,AAAMC,AAA2C,AAGK,AAAA,AAAAC,AAACC,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAK;AAHnBJ,AAGA,AAAA,AAAA,AAAA;AAEhDQ,AAAiD,AAGK,AAAA,AAAAC,AAACJ,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAU;AAHnBT,AAGA,AAAA,AAAA,AAAA;AAEtDU,AAA0C,AAGK,AAAA,AAAAC,AAACN,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAY;AAHnBV,AAGA,AAAA,AAAA,AAAA;AAE/CW,AAA0C,AAGK,AAAA,AAAAC,AAACR,AACDE;AADA,AAAS,AAACD,AAAEP,AAAO,AAAA,AAAAc;AAHnBb,AAGA,AAAA,AAAA,AAAA;AAlBrD,AAAA,AAAA,AAAA,AAAA,AAsBO,AAAMc,AAAS,AAAA,AAAWX;AACpBY,AAAK,AAAA,AAAOZ;AADlB,AAEK,AAAA,AAAKW,AAAS,AAACpB,AAAOoB,AAA0EC;AAxB5G,AAAA,AA0BO,AAAMD,AAAS,AAAA,AAAWN;AACpBO,AAAK,AAAA,AAAOP;AADlB,AAEK,AAAA,AAAKM,AAAS,AAACpB,AAAOoB,AAAuDC;AA5BzF,AAAA,AA8BO,AAAMD,AAAS,AAAA,AAAWJ;AACpBK,AAAK,AAAA,AAAOL;AADlB,AAEK,AAAA,AAAKI,AAAS,AAACpB,AAAOoB,AAA6EC;AAhC/G,AAAA,AAAA,AAAA,AAmCO,AAAMD,AAAS,AAAA,AAAWF;AACpBI,AAAS,AAAA,AAAWJ;AACpBK,AAAS,AAAA,AAAWL;AAF1B,AAGK;;;AAGlB,AAAA,AAAMO;AAAN,AAAA,AAAA,AAAAD,AAAA,AAAAA,AAAA,AAAAA,AAAA,AAAAA,AACOpB,AACCsB,AACAC,AACAC,AACAC","names":["dcs.prototype-6.ui-region-position/suffix","n","s","clojure.string/ends-with?","dcs.prototype-6.ui-region-position/ele","region","household-waste-derivation-positions","household-co2e-derivation-positions","business-waste-by-region-derivation-positions","household-waste-generation-latest-position","p1__29010#","cljs.core.filter","cljs.core._EQ_","cljs.core/first","household-waste-percent-recycled-latest-position","p1__29011#","household-co2e-generation-latest-position","p1__29012#","household-waste-generation-trend-position","p1__29013#","position","year","min-year","max-year","cljs.core/deref","dcs.prototype-6.ui-region-position/create","dcs.prototype-6.state/region-holder","dcs.prototype-6.state/household-waste-derivation-positions-holder","dcs.prototype-6.state/household-co2e-derivation-positions-holder","dcs.prototype-6.state/business-waste-by-region-derivation-positions-holder"],"sourcesContent":["(ns dcs.prototype-6.ui-region-position\n  (:require [clojure.string :as str]\n            [dcs.prototype-6.state :as state]))\n\n\n(defn suffix [n]\n      (let [s (str n)]\n           (cond\n             (str/ends-with? s \"11\") \"th\"\n             (str/ends-with? s \"12\") \"th\"\n             (str/ends-with? s \"13\") \"th\"\n             (str/ends-with? s \"1\") \"st\"\n             (str/ends-with? s \"2\") \"nd\"\n             :else \"th\")))\n\n\n(defn ele [region\n           household-waste-derivation-positions\n           household-co2e-derivation-positions\n           business-waste-by-region-derivation-positions]\n\n      (let [household-waste-generation-latest-position (->> household-waste-derivation-positions\n                                                            :generation\n                                                            :latest\n                                                            (filter #(= region (:region %)))\n                                                            first)\n            household-waste-percent-recycled-latest-position (->> household-waste-derivation-positions\n                                                                  :percent-recycled\n                                                                  :latest\n                                                                  (filter #(= region (:region %)))\n                                                                  first)\n            household-co2e-generation-latest-position (->> household-co2e-derivation-positions\n                                                           :generation\n                                                           :latest\n                                                           (filter #(= region (:region %)))\n                                                           first)\n            household-waste-generation-trend-position (->> household-waste-derivation-positions\n                                                           :generation\n                                                           :trend\n                                                           (filter #(= region (:region %)))\n                                                           first)]\n           [:div\n            [:p\n             (let [position (:position household-waste-generation-latest-position)\n                   year (:year household-waste-generation-latest-position)]\n                  (str position (suffix position) \" for the lowest generation of household waste per citizen in \" year))\n             [:br]\n             (let [position (:position household-waste-percent-recycled-latest-position)\n                   year (:year household-waste-percent-recycled-latest-position)]\n                  (str position (suffix position) \" highest % recycled of household waste in \" year))\n             [:br]\n             (let [position (:position household-co2e-generation-latest-position)\n                   year (:year household-co2e-generation-latest-position)]\n                  (str position (suffix position) \" for the lowest carbon impact of household waste per citizen in \" year))\n             [:br]\n             [:br]\n             (let [position (:position household-waste-generation-trend-position)\n                   min-year (:min-year household-waste-generation-trend-position)\n                   max-year (:max-year household-waste-generation-trend-position)]\n                  (str \"TODO: each of the trends\" #_\" best for reducing the generation of household waste from \" #_min-year #_\" to \" #_max-year))]]))\n\n\n(defn create []\n      [ele\n       @state/region-holder\n       @state/household-waste-derivation-positions-holder\n       @state/household-co2e-derivation-positions-holder\n       @state/business-waste-by-region-derivation-positions-holder])"]}