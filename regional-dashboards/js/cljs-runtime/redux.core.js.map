{"version":3,"sources":["redux/core.cljc"],"mappings":"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","names":["redux.core/pre-step","rf","f","acc","x","G__26792","G__26793","redux.core/post-complete","G__26794","redux.core/with-xform","xform","rfv","cljs.core/volatile!","cljs.core/vreset!","fexpr__26795","cljs.core/deref","fexpr__26796","fexpr__26797","var_args","args__4742__auto__","len__4736__auto__","i__4737__auto__","argseq__4743__auto__","cljs.core/IndexedSeq","redux.core/juxt","seq26799","self__4724__auto__","cljs.core/seq","rfns","cljs.core.mapv","a","G__26800","cljs.core/unreduced","all-reduced?","results","cljs.core/reduced?","cljs.core/reduced","redux.core/facet","fns","cljs.core.map","cljs.core.apply","redux.core/fuse","kvs","cljs.core/vals","cljs.core/zipmap","cljs.core/keys","redux.core/fuse-matrix","redux.utils/pairs","p__26806","vec__26807","cljs.core.nth","k1","k2","G__26810","p1__26804#","G__26811","p1__26805#","cljs.core.get","cljs.core.into","redux.utils/project","redux.utils/complete-triangular-matrix"],"sourcesContent":["(ns redux.core\n  (:require [redux.utils :refer [project complete-triangular-matrix pairs]])\n  (:refer-clojure :exclude [juxt]))\n\n(defn pre-step [rf f]\n  (fn\n    ([]      (rf))\n    ([acc]   (rf acc))\n    ([acc x] (rf acc (f x)))))\n\n(defn post-complete [rf f]\n  (fn\n    ([]      (rf))\n    ([acc]   (f (rf acc)))\n    ([acc x] (rf acc x))))\n\n(defn with-xform [rf xform]\n  (let [rfv (volatile! nil)]\n    (fn\n      ([]\n       (vreset! rfv (xform rf))\n       (@rfv))\n      ([acc]\n       (@rfv acc))\n      ([acc x]\n       (@rfv acc x)))))\n\n(defn juxt [& rfns]\n  (fn\n    ([] (mapv (fn [f] (f)) rfns))\n    ([acc] (mapv (fn [f a] (f (unreduced a))) rfns acc))\n    ([acc x]\n     (let [all-reduced? (volatile! true)\n           results (mapv (fn [f a]\n                           (if-not (reduced? a)\n                             (do (vreset! all-reduced? false)\n                                 (f a x))\n                             a))\n                         rfns acc)]\n       (if @all-reduced? (reduced results) results)))))\n\n(defn facet [rf fns]\n  (->> (map (fn [f] (pre-step rf f)) fns)\n       (apply juxt)))\n\n(defn fuse [kvs]\n  (post-complete (apply juxt (vals kvs))\n                 (fn [acc]\n                   (zipmap (keys kvs) acc))))\n\n(defn fuse-matrix [rf kvs]\n  (-> (fuse (->> (pairs (keys kvs))\n                 (map (fn [[k1 k2]]\n                        [[k1 k2] (rf #(get % k1) #(get % k2))]))\n                 (into {})))\n      (pre-step (project kvs))\n      (post-complete complete-triangular-matrix)))\n"]}