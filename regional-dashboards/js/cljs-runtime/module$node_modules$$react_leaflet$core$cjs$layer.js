shadow$provide.module$node_modules$$react_leaflet$core$cjs$layer=function(global,require,module,exports){function useLayerLifecycle(element,context){(0,_react.useEffect)(function(){var _context$layerContain,container=null!=(_context$layerContain=context.layerContainer)?_context$layerContain:context.map;container.addLayer(element.instance);return function(){container.removeLayer(element.instance)}},[context,element])}exports.__esModule=!0;exports.useLayerLifecycle=useLayerLifecycle;exports.createLayerHook=
function(useElement){return function(props){var context=(0,_context.useLeafletContext)(),elementRef=useElement((0,_pane.withPane)(props,context),context);(0,_attribution.useAttribution)(context.map,props.attribution);(0,_events.useEventHandlers)(elementRef.current,props.eventHandlers);useLayerLifecycle(elementRef.current,context);return elementRef}};var _react=require("module$node_modules$react$index"),_attribution=require("module$node_modules$$react_leaflet$core$cjs$attribution"),_context=require("module$node_modules$$react_leaflet$core$cjs$context"),
_events=require("module$node_modules$$react_leaflet$core$cjs$events"),_pane=require("module$node_modules$$react_leaflet$core$cjs$pane")}
//# sourceMappingURL=module$node_modules$$react_leaflet$core$cjs$layer.js.map
