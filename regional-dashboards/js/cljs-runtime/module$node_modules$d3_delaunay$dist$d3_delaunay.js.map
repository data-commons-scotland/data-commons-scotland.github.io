{
"version":3,
"file":"module$node_modules$d3_delaunay$dist$d3_delaunay.js",
"lineCount":59,
"mappings":"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",
"sources":["node_modules/d3-delaunay/dist/d3-delaunay.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$d3_delaunay$dist$d3_delaunay\"] = function(global,require,module,exports) {\n// https://github.com/d3/d3-delaunay v5.3.0 Copyright 2020 Mike Bostock\n// https://github.com/mapbox/delaunator v4.0.1. Copyright 2019 Mapbox, Inc.\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\ntypeof define === 'function' && define.amd ? define(['exports'], factory) :\n(global = global || self, factory(global.d3 = global.d3 || {}));\n}(this, function (exports) { 'use strict';\n\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nclass Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient(i0x, i0y, i1x, i1y, i2x, i2y)) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], !orient(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1])) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1])) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1])) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\n// return 2d orientation sign if we're confident in it through J. Shewchuk's error bound check\nfunction orientIfSure(px, py, rx, ry, qx, qy) {\n    const l = (ry - py) * (qx - px);\n    const r = (rx - px) * (qy - py);\n    return Math.abs(l - r) >= 3.3306690738754716e-16 * Math.abs(l + r) ? l - r : 0;\n}\n\n// a more robust orientation test that's stable in a given triangle (to fix robustness issues)\nfunction orient(rx, ry, qx, qy, px, py) {\n    const sign = orientIfSure(px, py, rx, ry, qx, qy) ||\n    orientIfSure(rx, ry, qx, qy, px, py) ||\n    orientIfSure(qx, qy, px, py, rx, ry);\n    return sign < 0;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n\nconst epsilon = 1e-6;\n\nclass Path {\n  constructor() {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n  }\n  moveTo(x, y) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  }\n  lineTo(x, y) {\n    this._ += `L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arc(x, y, r) {\n    x = +x, y = +y, r = +r;\n    const x0 = x + r;\n    const y0 = y;\n    if (r < 0) throw new Error(\"negative radius\");\n    if (this._x1 === null) this._ += `M${x0},${y0}`;\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) this._ += \"L\" + x0 + \",\" + y0;\n    if (!r) return;\n    this._ += `A${r},${r},0,1,1,${x - r},${y}A${r},${r},0,1,1,${this._x1 = x0},${this._y1 = y0}`;\n  }\n  rect(x, y, w, h) {\n    this._ += `M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${+w}v${+h}h${-w}Z`;\n  }\n  value() {\n    return this._ || null;\n  }\n}\n\nclass Polygon {\n  constructor() {\n    this._ = [];\n  }\n  moveTo(x, y) {\n    this._.push([x, y]);\n  }\n  closePath() {\n    this._.push(this._[0].slice());\n  }\n  lineTo(x, y) {\n    this._.push([x, y]);\n  }\n  value() {\n    return this._.length ? this._ : null;\n  }\n}\n\nclass Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const bl = dx * dx + dy * dy;\n      const cl = ex * ex + ey * ey;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (!ab) {\n        // degenerate case (collinear diagram)\n        x = (x1 + x3) / 2 - 1e8 * ey;\n        y = (y1 + y3) / 2 + 1e8 * ex;\n      }\n      else if (Math.abs(ab) < 1e-8) {\n        // almost equal points (degenerate triangle)\n        x = (x1 + x3) / 2;\n        y = (y1 + y3) / 2;\n      } else {\n        const d = 1 / ab;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] == cj[aj]\n          && ci[ai + 1] == cj[aj + 1]\n          && ci[(ai + 2) % li] == cj[(aj + lj - 2) % lj]\n          && ci[(ai + 3) % li] == cj[(aj + lj - 1) % lj]\n          ) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points);\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    while (true) {\n      if (c0 === 0 && c1 === 0) return [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    if (P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k]\n        || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1])\n          P.splice(j, 2), i -= 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n}\n\nconst tau = 2 * Math.PI, pow = Math.pow;\n\nfunction pointX(p) {\n  return p[0];\n}\n\nfunction pointY(p) {\n  return p[1];\n}\n\n// A triangulation is collinear if all its triangles have a non-null area\nfunction collinear(d) {\n  const {triangles, coords} = d;\n  for (let i = 0; i < triangles.length; i += 3) {\n    const a = 2 * triangles[i],\n          b = 2 * triangles[i + 1],\n          c = 2 * triangles[i + 2],\n          cross = (coords[c] - coords[a]) * (coords[b + 1] - coords[a + 1])\n                - (coords[b] - coords[a]) * (coords[c + 1] - coords[a + 1]);\n    if (cross > 1e-10) return false;\n  }\n  return true;\n}\n\nfunction jitter(x, y, r) {\n  return [x + Math.sin(x + y) * r, y + Math.cos(x - y) * r];\n}\n\nclass Delaunay {\n  static from(points, fx = pointX, fy = pointY, that) {\n    return new Delaunay(\"length\" in points\n        ? flatArray(points, fx, fy, that)\n        : Float64Array.from(flatIterable(points, fx, fy, that)));\n  }\n  constructor(points) {\n    this._delaunator = new Delaunator(points);\n    this.inedges = new Int32Array(points.length / 2);\n    this._hullIndex = new Int32Array(points.length / 2);\n    this.points = this._delaunator.coords;\n    this._init();\n  }\n  update() {\n    this._delaunator.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const d = this._delaunator, points = this.points;\n\n    // check for collinear\n    if (d.hull && d.hull.length > 2 && collinear(d)) {\n      this.collinear = Int32Array.from({length: points.length/2}, (_,i) => i)\n        .sort((i, j) => points[2 * i] - points[2 * j] || points[2 * i + 1] - points[2 * j + 1]); // for exact neighbors\n      const e = this.collinear[0], f = this.collinear[this.collinear.length - 1],\n        bounds = [ points[2 * e], points[2 * e + 1], points[2 * f], points[2 * f + 1] ],\n        r = 1e-8 * Math.hypot(bounds[3] - bounds[1], bounds[2] - bounds[0]);\n      for (let i = 0, n = points.length / 2; i < n; ++i) {\n        const p = jitter(points[2 * i], points[2 * i + 1], r);\n        points[2 * i] = p[0];\n        points[2 * i + 1] = p[1];\n      }\n      this._delaunator = new Delaunator(points);\n    } else {\n      delete this.collinear;\n    }\n\n    const halfedges = this.halfedges = this._delaunator.halfedges;\n    const hull = this.hull = this._delaunator.hull;\n    const triangles = this.triangles = this._delaunator.triangles;\n    const inedges = this.inedges.fill(-1);\n    const hullIndex = this._hullIndex.fill(-1);\n\n    // Compute an index from each point to an (arbitrary) incoming halfedge\n    // Used to give the first neighbor of each point; for this reason,\n    // on the hull we give priority to exterior halfedges\n    for (let e = 0, n = halfedges.length; e < n; ++e) {\n      const p = triangles[e % 3 === 2 ? e - 2 : e + 1];\n      if (halfedges[e] === -1 || inedges[p] === -1) inedges[p] = e;\n    }\n    for (let i = 0, n = hull.length; i < n; ++i) {\n      hullIndex[hull[i]] = i;\n    }\n\n    // degenerate case: 1 or 2 (distinct) points\n    if (hull.length <= 2 && hull.length > 0) {\n      this.triangles = new Int32Array(3).fill(-1);\n      this.halfedges = new Int32Array(3).fill(-1);\n      this.triangles[0] = hull[0];\n      this.triangles[1] = hull[1];\n      this.triangles[2] = hull[1];\n      inedges[hull[0]] = 1;\n      if (hull.length === 2) inedges[hull[1]] = 0;\n    }\n  }\n  voronoi(bounds) {\n    return new Voronoi(this, bounds);\n  }\n  *neighbors(i) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, collinear} = this;\n\n    // degenerate case with several collinear points\n    if (collinear) {\n      const l = collinear.indexOf(i);\n      if (l > 0) yield collinear[l - 1];\n      if (l < collinear.length - 1) yield collinear[l + 1];\n      return;\n    }\n\n    const e0 = inedges[i];\n    if (e0 === -1) return; // coincident point\n    let e = e0, p0 = -1;\n    do {\n      yield p0 = triangles[e];\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) return; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        const p = hull[(_hullIndex[i] + 1) % hull.length];\n        if (p !== p0) yield p;\n        return;\n      }\n    } while (e !== e0);\n  }\n  find(x, y, i = 0) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return -1;\n    const i0 = i;\n    let c;\n    while ((c = this._step(i, x, y)) >= 0 && c !== i && c !== i0) i = c;\n    return c;\n  }\n  _step(i, x, y) {\n    const {inedges, hull, _hullIndex, halfedges, triangles, points} = this;\n    if (inedges[i] === -1 || !points.length) return (i + 1) % (points.length >> 1);\n    let c = i;\n    let dc = pow(x - points[i * 2], 2) + pow(y - points[i * 2 + 1], 2);\n    const e0 = inedges[i];\n    let e = e0;\n    do {\n      let t = triangles[e];\n      const dt = pow(x - points[t * 2], 2) + pow(y - points[t * 2 + 1], 2);\n      if (dt < dc) dc = dt, c = t;\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n      if (e === -1) {\n        e = hull[(_hullIndex[i] + 1) % hull.length];\n        if (e !== t) {\n          if (pow(x - points[e * 2], 2) + pow(y - points[e * 2 + 1], 2) < dc) return e;\n        }\n        break;\n      }\n    } while (e !== e0);\n    return c;\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, halfedges, triangles} = this;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = triangles[i] * 2;\n      const tj = triangles[j] * 2;\n      context.moveTo(points[ti], points[ti + 1]);\n      context.lineTo(points[tj], points[tj + 1]);\n    }\n    this.renderHull(context);\n    return buffer && buffer.value();\n  }\n  renderPoints(context, r = 2) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points} = this;\n    for (let i = 0, n = points.length; i < n; i += 2) {\n      const x = points[i], y = points[i + 1];\n      context.moveTo(x + r, y);\n      context.arc(x, y, r, 0, tau);\n    }\n    return buffer && buffer.value();\n  }\n  renderHull(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {hull, points} = this;\n    const h = hull[0] * 2, n = hull.length;\n    context.moveTo(points[h], points[h + 1]);\n    for (let i = 1; i < n; ++i) {\n      const h = 2 * hull[i];\n      context.lineTo(points[h], points[h + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  hullPolygon() {\n    const polygon = new Polygon;\n    this.renderHull(polygon);\n    return polygon.value();\n  }\n  renderTriangle(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {points, triangles} = this;\n    const t0 = triangles[i *= 3] * 2;\n    const t1 = triangles[i + 1] * 2;\n    const t2 = triangles[i + 2] * 2;\n    context.moveTo(points[t0], points[t0 + 1]);\n    context.lineTo(points[t1], points[t1 + 1]);\n    context.lineTo(points[t2], points[t2 + 1]);\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *trianglePolygons() {\n    const {triangles} = this;\n    for (let i = 0, n = triangles.length / 3; i < n; ++i) {\n      yield this.trianglePolygon(i);\n    }\n  }\n  trianglePolygon(i) {\n    const polygon = new Polygon;\n    this.renderTriangle(i, polygon);\n    return polygon.value();\n  }\n}\n\nfunction flatArray(points, fx, fy, that) {\n  const n = points.length;\n  const array = new Float64Array(n * 2);\n  for (let i = 0; i < n; ++i) {\n    const p = points[i];\n    array[i * 2] = fx.call(that, p, i, points);\n    array[i * 2 + 1] = fy.call(that, p, i, points);\n  }\n  return array;\n}\n\nfunction* flatIterable(points, fx, fy, that) {\n  let i = 0;\n  for (const p of points) {\n    yield fx.call(that, p, i, points);\n    yield fy.call(that, p, i, points);\n    ++i;\n  }\n}\n\nexports.Delaunay = Delaunay;\nexports.Voronoi = Voronoi;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","factory","define","amd","self","d3","dist","ax","ay","bx","by","dx","dy","orientIfSure","px","py","rx","ry","qx","qy","l","r","Math","abs","orient","quicksort","ids","dists","left","right","i","temp","tempDist","j","swap","arr","tmp","defaultGetX","p","defaultGetY","pointX","pointY","collinear","d","triangles","coords","length","a","b","c","jitter","x","y","sin","cos","flatIterable","points","fx","fy","that","call","EPSILON","pow","EDGE_STACK","Uint32Array","Delaunator","constructor","n","Error","maxTriangles","max","_triangles","_halfedges","Int32Array","_hashSize","ceil","sqrt","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","Float64Array","update","from","getX","getY","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","cx","cy","minDist","i0","i0x","i0y","i1","i1x","i1y","minRadius","ex","ey","bl","cl","i2","i2x","i2y","hull","d0","id","subarray","halfedges","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","k","yp","xp","start","key","e","q","t","_legalize","floor","ar","a0","b0","p0","pr","pl","p1","bp","cp","hbl","_link","br","Path","_x0","_y0","_x1","_y1","_","moveTo","closePath","lineTo","arc","x0","y0","epsilon","rect","w","h","value","Polygon","push","slice","Voronoi","delaunay","xmin","ymin","xmax","ymax","_circumcenters","vectors","_init","circumcenters","t1","t2","t3","x1","y1","x3","y3","x2","y2","ab","render","context","buffer","undefined","inedges","ti","tj","_renderSegment","xi","yi","xj","yj","h1","h0","_project","v","renderBounds","renderCell","_clip","cellPolygons","cell","cellPolygon","index","polygon","c0","_regioncode","c1","S","_clipSegment","contains","_step","neighbors","ci","cj","ai","li","aj","lj","_cell","e0","V","_clipInfinite","_clipFinite","P","e1","sx1","sy1","sx0","sy0","_edgecode","_edge","vx0","vy0","vxn","vyn","Array","unshift","splice","vx","vy","tau","PI","Delaunay","_delaunator","_hullIndex","array","sort","f","bounds","hypot","hullIndex","voronoi","indexOf","find","dc","dt","renderHull","renderPoints","hullPolygon","renderTriangle","t0","trianglePolygons","trianglePolygon","Object","defineProperty"]
}
